@namespace MUnique.OpenMU.Startup
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    
    <link href="MUnique.OpenMU.Startup.styles.css" rel="stylesheet" />
    @foreach (var stylesheetSrc in Web.AdminPanel.Exports.Stylesheets)
    {
        <link href="@stylesheetSrc" rel="stylesheet" />
    }

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <app>@RenderBody()</app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

<script src="_framework/blazor.server.js"></script>

@foreach (var scriptSrc in Web.AdminPanel.Exports.Scripts)
{
    <script src="@scriptSrc"></script>
}

@if (Web.AdminPanel.Exports.ScriptMappings.Any())
{
    var sb = new StringBuilder();
    sb.AppendLine("System.config({").AppendLine("    map: {");
    bool isFirst = true;
    foreach (var scriptMapping in Web.AdminPanel.Exports.ScriptMappings)
    {
        if (!isFirst)
        {
            sb.AppendLine(",");
        }

        isFirst = false;
        sb.Append($"'{scriptMapping.Key}': '")
            .Append(Url.Content(scriptMapping.Path))
            .Append("'");
    }
    sb.AppendLine("    }")
        .AppendLine("});");

    
    <script>
        // To be able to resolve three etc. in our TS files and the resulting javascript, SystemJS needs to be configured.
        // These modules are loaded by SystemJS when they get requested the first time. No need to manually load them.
        @Html.Raw(sb.ToString())
    </script>
}
</body>
</html>
