// <copyright file="ExtendedTypes.cs" company="MUnique">
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This source code was auto-generated by a T4 template.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable All

namespace MUnique.OpenMU.Persistence.EntityFramework
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using Newtonsoft.Json;
    using Mapster;
    using MUnique.OpenMU.Persistence;

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Account"/>.
    /// </summary>
    [Table("Account", Schema = "data")]
    internal partial class Account : MUnique.OpenMU.DataModel.Entities.Account, IIdentifiable
    {
        public Account()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.UnlockedCharacterClasses = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, AccountCharacterClass>(this.JoinedUnlockedCharacterClasses, joinEntity => joinEntity.CharacterClass, entity => new AccountCharacterClass { Account = this, AccountId = this.Id, CharacterClass = (CharacterClass)entity, CharacterClassId = ((CharacterClass)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Vault"/>.
        /// </summary>
        public Guid? VaultId { get; set; }
        
        [ForeignKey("VaultId")]
        public ItemStorage RawVault
        { 
            get { return base.Vault as ItemStorage; }
            set { base.Vault = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage Vault
        {
            get
            {
                return base.Vault;
            }
            
            set
            {
                base.Vault = value;
                this.VaultId = this.RawVault?.Id;
            }
        }

        public ICollection<Character> RawCharacters { get; } = new List<Character>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.Character> Characters
        {
            get
            {
                return base.Characters ?? (base.Characters = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.Character, Character>(this.RawCharacters)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.AppearanceData"/>.
    /// </summary>
    [Table("AppearanceData", Schema = "data")]
    internal partial class AppearanceData : MUnique.OpenMU.DataModel.Entities.AppearanceData, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="CharacterClass"/>.
        /// </summary>
        public Guid? CharacterClassId { get; set; }
        
        [ForeignKey("CharacterClassId")]
        public CharacterClass RawCharacterClass
        { 
            get { return base.CharacterClass as CharacterClass; }
            set { base.CharacterClass = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass CharacterClass
        {
            get
            {
                return base.CharacterClass;
            }
            
            set
            {
                base.CharacterClass = value;
                this.CharacterClassId = this.RawCharacterClass?.Id;
            }
        }

        public ICollection<ItemAppearance> RawEquippedItems { get; } = new List<ItemAppearance>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.ItemAppearance> EquippedItems
        {
            get
            {
                return base.EquippedItems ?? (base.EquippedItems = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.ItemAppearance, ItemAppearance>(this.RawEquippedItems)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Character"/>.
    /// </summary>
    [Table("Character", Schema = "data")]
    internal partial class Character : MUnique.OpenMU.DataModel.Entities.Character, IIdentifiable
    {
        public Character()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.DropItemGroups = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, CharacterDropItemGroup>(this.JoinedDropItemGroups, joinEntity => joinEntity.DropItemGroup, entity => new CharacterDropItemGroup { Character = this, CharacterId = this.Id, DropItemGroup = (DropItemGroup)entity, DropItemGroupId = ((DropItemGroup)entity).Id});
        }
        /// <summary>
        /// Gets or sets the identifier of <see cref="CharacterClass"/>.
        /// </summary>
        public Guid? CharacterClassId { get; set; }
        
        [ForeignKey("CharacterClassId")]
        public CharacterClass RawCharacterClass
        { 
            get { return base.CharacterClass as CharacterClass; }
            set { base.CharacterClass = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass CharacterClass
        {
            get
            {
                return base.CharacterClass;
            }
            
            set
            {
                base.CharacterClass = value;
                this.CharacterClassId = this.RawCharacterClass?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="CurrentMap"/>.
        /// </summary>
        public Guid? CurrentMapId { get; set; }
        
        [ForeignKey("CurrentMapId")]
        public GameMapDefinition RawCurrentMap
        { 
            get { return base.CurrentMap as GameMapDefinition; }
            set { base.CurrentMap = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition CurrentMap
        {
            get
            {
                return base.CurrentMap;
            }
            
            set
            {
                base.CurrentMap = value;
                this.CurrentMapId = this.RawCurrentMap?.Id;
            }
        }

        public ICollection<StatAttribute> RawAttributes { get; } = new List<StatAttribute>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.AttributeSystem.StatAttribute> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.StatAttribute, StatAttribute>(this.RawAttributes)); 
            }
        }

        public IList<LetterHeader> RawLetters { get; } = new List<LetterHeader>();        
        /// <inheritdoc/>
        [NotMapped]
        public override IList<MUnique.OpenMU.Interfaces.LetterHeader> Letters
        {
            get
            {
                return base.Letters ?? (base.Letters = new ListAdapter<MUnique.OpenMU.Interfaces.LetterHeader, LetterHeader>(this.RawLetters)); 
            }
        }

        public ICollection<SkillEntry> RawLearnedSkills { get; } = new List<SkillEntry>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.SkillEntry> LearnedSkills
        {
            get
            {
                return base.LearnedSkills ?? (base.LearnedSkills = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.SkillEntry, SkillEntry>(this.RawLearnedSkills)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="Inventory"/>.
        /// </summary>
        public Guid? InventoryId { get; set; }
        
        [ForeignKey("InventoryId")]
        public ItemStorage RawInventory
        { 
            get { return base.Inventory as ItemStorage; }
            set { base.Inventory = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage Inventory
        {
            get
            {
                return base.Inventory;
            }
            
            set
            {
                base.Inventory = value;
                this.InventoryId = this.RawInventory?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Guild"/>.
    /// </summary>
    [Table("Guild", Schema = "data")]
    internal partial class Guild : MUnique.OpenMU.DataModel.Entities.Guild, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
public ICollection<GuildMember> RawMembers { get; } = new List<GuildMember>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.GuildMember> Members
        {
            get
            {
                return base.Members ?? (base.Members = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.GuildMember, GuildMember>(this.RawMembers)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="Hostility"/>.
        /// </summary>
        public Guid? HostilityId { get; set; }
        
        [ForeignKey("HostilityId")]
        public Guild RawHostility
        { 
            get { return base.Hostility as Guild; }
            set { base.Hostility = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.Interfaces.Guild Hostility
        {
            get
            {
                return base.Hostility;
            }
            
            set
            {
                base.Hostility = value;
                this.HostilityId = this.RawHostility?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="AllianceGuild"/>.
        /// </summary>
        public Guid? AllianceGuildId { get; set; }
        
        [ForeignKey("AllianceGuildId")]
        public Guild RawAllianceGuild
        { 
            get { return base.AllianceGuild as Guild; }
            set { base.AllianceGuild = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.Interfaces.Guild AllianceGuild
        {
            get
            {
                return base.AllianceGuild;
            }
            
            set
            {
                base.AllianceGuild = value;
                this.AllianceGuildId = this.RawAllianceGuild?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.GuildMember"/>.
    /// </summary>
    [Table("GuildMember", Schema = "data")]
    internal partial class GuildMember : MUnique.OpenMU.DataModel.Entities.GuildMember, IIdentifiable
    {
        public GuildMember()
        {
            this.InitJoinCollections();
        } 

        public GuildMember(System.Guid id)
          : base (id)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Item"/>.
    /// </summary>
    [Table("Item", Schema = "data")]
    internal partial class Item : MUnique.OpenMU.DataModel.Entities.Item, IIdentifiable
    {
        public Item()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.ItemSetGroups = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemItemSetGroup>(this.JoinedItemSetGroups, joinEntity => joinEntity.ItemSetGroup, entity => new ItemItemSetGroup { Item = this, ItemId = this.Id, ItemSetGroup = (ItemSetGroup)entity, ItemSetGroupId = ((ItemSetGroup)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Definition"/>.
        /// </summary>
        public Guid? DefinitionId { get; set; }
        
        [ForeignKey("DefinitionId")]
        public ItemDefinition RawDefinition
        { 
            get { return base.Definition as ItemDefinition; }
            set { base.Definition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            set
            {
                base.Definition = value;
                this.DefinitionId = this.RawDefinition?.Id;
            }
        }

        public ICollection<ItemOptionLink> RawItemOptions { get; } = new List<ItemOptionLink>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.ItemOptionLink> ItemOptions
        {
            get
            {
                return base.ItemOptions ?? (base.ItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.ItemOptionLink, ItemOptionLink>(this.RawItemOptions)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemAppearance"/>.
    /// </summary>
    [Table("ItemAppearance", Schema = "data")]
    internal partial class ItemAppearance : MUnique.OpenMU.DataModel.Entities.ItemAppearance, IIdentifiable
    {
        public ItemAppearance()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.VisibleOptions = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemAppearanceItemOptionType>(this.JoinedVisibleOptions, joinEntity => joinEntity.ItemOptionType, entity => new ItemAppearanceItemOptionType { ItemAppearance = this, ItemAppearanceId = this.Id, ItemOptionType = (ItemOptionType)entity, ItemOptionTypeId = ((ItemOptionType)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Definition"/>.
        /// </summary>
        public Guid? DefinitionId { get; set; }
        
        [ForeignKey("DefinitionId")]
        public ItemDefinition RawDefinition
        { 
            get { return base.Definition as ItemDefinition; }
            set { base.Definition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            set
            {
                base.Definition = value;
                this.DefinitionId = this.RawDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemOptionLink"/>.
    /// </summary>
    [Table("ItemOptionLink", Schema = "data")]
    internal partial class ItemOptionLink : MUnique.OpenMU.DataModel.Entities.ItemOptionLink, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ItemOption"/>.
        /// </summary>
        public Guid? ItemOptionId { get; set; }
        
        [ForeignKey("ItemOptionId")]
        public IncreasableItemOption RawItemOption
        { 
            get { return base.ItemOption as IncreasableItemOption; }
            set { base.ItemOption = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption ItemOption
        {
            get
            {
                return base.ItemOption;
            }
            
            set
            {
                base.ItemOption = value;
                this.ItemOptionId = this.RawItemOption?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemStorage"/>.
    /// </summary>
    [Table("ItemStorage", Schema = "data")]
    internal partial class ItemStorage : MUnique.OpenMU.DataModel.Entities.ItemStorage, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<Item> RawItems { get; } = new List<Item>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.Item> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.Item, Item>(this.RawItems)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.LetterBody"/>.
    /// </summary>
    [Table("LetterBody", Schema = "data")]
    internal partial class LetterBody : MUnique.OpenMU.DataModel.Entities.LetterBody, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
        /// <summary>
        /// Gets or sets the identifier of <see cref="Header"/>.
        /// </summary>
        public Guid? HeaderId { get; set; }
        
        [ForeignKey("HeaderId")]
        public LetterHeader RawHeader
        { 
            get { return base.Header as LetterHeader; }
            set { base.Header = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.Interfaces.LetterHeader Header
        {
            get
            {
                return base.Header;
            }
            
            set
            {
                base.Header = value;
                this.HeaderId = this.RawHeader?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="SenderAppearance"/>.
        /// </summary>
        public Guid? SenderAppearanceId { get; set; }
        
        [ForeignKey("SenderAppearanceId")]
        public AppearanceData RawSenderAppearance
        { 
            get { return base.SenderAppearance as AppearanceData; }
            set { base.SenderAppearance = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Entities.AppearanceData SenderAppearance
        {
            get
            {
                return base.SenderAppearance;
            }
            
            set
            {
                base.SenderAppearance = value;
                this.SenderAppearanceId = this.RawSenderAppearance?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Entities.SkillEntry"/>.
    /// </summary>
    [Table("SkillEntry", Schema = "data")]
    internal partial class SkillEntry : MUnique.OpenMU.DataModel.Entities.SkillEntry, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Skill"/>.
        /// </summary>
        public Guid? SkillId { get; set; }
        
        [ForeignKey("SkillId")]
        public Skill RawSkill
        { 
            get { return base.Skill as Skill; }
            set { base.Skill = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Skill Skill
        {
            get
            {
                return base.Skill;
            }
            
            set
            {
                base.Skill = value;
                this.SkillId = this.RawSkill?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.CharacterClass"/>.
    /// </summary>
    [Table("CharacterClass", Schema = "config")]
    internal partial class CharacterClass : MUnique.OpenMU.DataModel.Configuration.CharacterClass, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="NextGenerationClass"/>.
        /// </summary>
        public Guid? NextGenerationClassId { get; set; }
        
        [ForeignKey("NextGenerationClassId")]
        public CharacterClass RawNextGenerationClass
        { 
            get { return base.NextGenerationClass as CharacterClass; }
            set { base.NextGenerationClass = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass NextGenerationClass
        {
            get
            {
                return base.NextGenerationClass;
            }
            
            set
            {
                base.NextGenerationClass = value;
                this.NextGenerationClassId = this.RawNextGenerationClass?.Id;
            }
        }

        public ICollection<StatAttributeDefinition> RawStatAttributes { get; } = new List<StatAttributeDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition> StatAttributes
        {
            get
            {
                return base.StatAttributes ?? (base.StatAttributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition, StatAttributeDefinition>(this.RawStatAttributes)); 
            }
        }

        public ICollection<AttributeRelationship> RawAttributeCombinations { get; } = new List<AttributeRelationship>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeRelationship> AttributeCombinations
        {
            get
            {
                return base.AttributeCombinations ?? (base.AttributeCombinations = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeRelationship, AttributeRelationship>(this.RawAttributeCombinations)); 
            }
        }

        public ICollection<ConstValueAttribute> RawBaseAttributeValues { get; } = new List<ConstValueAttribute>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.AttributeSystem.ConstValueAttribute> BaseAttributeValues
        {
            get
            {
                return base.BaseAttributeValues ?? (base.BaseAttributeValues = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.ConstValueAttribute, ConstValueAttribute>(this.RawBaseAttributeValues)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="HomeMap"/>.
        /// </summary>
        public Guid? HomeMapId { get; set; }
        
        [ForeignKey("HomeMapId")]
        public GameMapDefinition RawHomeMap
        { 
            get { return base.HomeMap as GameMapDefinition; }
            set { base.HomeMap = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition HomeMap
        {
            get
            {
                return base.HomeMap;
            }
            
            set
            {
                base.HomeMap = value;
                this.HomeMapId = this.RawHomeMap?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition"/>.
    /// </summary>
    [Table("ChatServerDefinition", Schema = "config")]
    internal partial class ChatServerDefinition : MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<ChatServerEndpoint> RawEndpoints { get; } = new List<ChatServerEndpoint>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint> Endpoints
        {
            get
            {
                return base.Endpoints ?? (base.Endpoints = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint, ChatServerEndpoint>(this.RawEndpoints)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint"/>.
    /// </summary>
    [Table("ChatServerEndpoint", Schema = "config")]
    internal partial class ChatServerEndpoint : MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Client"/>.
        /// </summary>
        public Guid? ClientId { get; set; }
        
        [ForeignKey("ClientId")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
                this.ClientId = this.RawClient?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition"/>.
    /// </summary>
    [Table("ConnectServerDefinition", Schema = "config")]
    internal partial class ConnectServerDefinition : MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Client"/>.
        /// </summary>
        public Guid? ClientId { get; set; }
        
        [ForeignKey("ClientId")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
                this.ClientId = this.RawClient?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.DropItemGroup"/>.
    /// </summary>
    [Table("DropItemGroup", Schema = "config")]
    internal partial class DropItemGroup : MUnique.OpenMU.DataModel.Configuration.DropItemGroup, IIdentifiable
    {
        public DropItemGroup()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.PossibleItems = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, DropItemGroupItemDefinition>(this.JoinedPossibleItems, joinEntity => joinEntity.ItemDefinition, entity => new DropItemGroupItemDefinition { DropItemGroup = this, DropItemGroupId = this.Id, ItemDefinition = (ItemDefinition)entity, ItemDefinitionId = ((ItemDefinition)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.EnterGate"/>.
    /// </summary>
    [Table("EnterGate", Schema = "config")]
    internal partial class EnterGate : MUnique.OpenMU.DataModel.Configuration.EnterGate, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="TargetGate"/>.
        /// </summary>
        public Guid? TargetGateId { get; set; }
        
        [ForeignKey("TargetGateId")]
        public ExitGate RawTargetGate
        { 
            get { return base.TargetGate as ExitGate; }
            set { base.TargetGate = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.ExitGate TargetGate
        {
            get
            {
                return base.TargetGate;
            }
            
            set
            {
                base.TargetGate = value;
                this.TargetGateId = this.RawTargetGate?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ExitGate"/>.
    /// </summary>
    [Table("ExitGate", Schema = "config")]
    internal partial class ExitGate : MUnique.OpenMU.DataModel.Configuration.ExitGate, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Map"/>.
        /// </summary>
        public Guid? MapId { get; set; }
        
        [ForeignKey("MapId")]
        public GameMapDefinition RawMap
        { 
            get { return base.Map as GameMapDefinition; }
            set { base.Map = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition Map
        {
            get
            {
                return base.Map;
            }
            
            set
            {
                base.Map = value;
                this.MapId = this.RawMap?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameClientDefinition"/>.
    /// </summary>
    [Table("GameClientDefinition", Schema = "config")]
    internal partial class GameClientDefinition : MUnique.OpenMU.DataModel.Configuration.GameClientDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameConfiguration"/>.
    /// </summary>
    [Table("GameConfiguration", Schema = "config")]
    internal partial class GameConfiguration : MUnique.OpenMU.DataModel.Configuration.GameConfiguration, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<JewelMix> RawJewelMixes { get; } = new List<JewelMix>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.JewelMix> JewelMixes
        {
            get
            {
                return base.JewelMixes ?? (base.JewelMixes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.JewelMix, JewelMix>(this.RawJewelMixes)); 
            }
        }

        public ICollection<WarpInfo> RawWarpList { get; } = new List<WarpInfo>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.WarpInfo> WarpList
        {
            get
            {
                return base.WarpList ?? (base.WarpList = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.WarpInfo, WarpInfo>(this.RawWarpList)); 
            }
        }

        public ICollection<DropItemGroup> RawDropItemGroups { get; } = new List<DropItemGroup>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups
        {
            get
            {
                return base.DropItemGroups ?? (base.DropItemGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups)); 
            }
        }

        public ICollection<Skill> RawSkills { get; } = new List<Skill>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Skill> Skills
        {
            get
            {
                return base.Skills ?? (base.Skills = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Skill, Skill>(this.RawSkills)); 
            }
        }

        public ICollection<CharacterClass> RawCharacterClasses { get; } = new List<CharacterClass>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> CharacterClasses
        {
            get
            {
                return base.CharacterClasses ?? (base.CharacterClasses = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawCharacterClasses)); 
            }
        }

        public ICollection<ItemDefinition> RawItems { get; } = new List<ItemDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, ItemDefinition>(this.RawItems)); 
            }
        }

        public ICollection<ItemSlotType> RawItemSlotTypes { get; } = new List<ItemSlotType>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType> ItemSlotTypes
        {
            get
            {
                return base.ItemSlotTypes ?? (base.ItemSlotTypes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, ItemSlotType>(this.RawItemSlotTypes)); 
            }
        }

        public ICollection<ItemOptionDefinition> RawItemOptions { get; } = new List<ItemOptionDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition> ItemOptions
        {
            get
            {
                return base.ItemOptions ?? (base.ItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, ItemOptionDefinition>(this.RawItemOptions)); 
            }
        }

        public ICollection<ItemOptionType> RawItemOptionTypes { get; } = new List<ItemOptionType>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType> ItemOptionTypes
        {
            get
            {
                return base.ItemOptionTypes ?? (base.ItemOptionTypes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemOptionType>(this.RawItemOptionTypes)); 
            }
        }

        public ICollection<ItemSetGroup> RawItemSetGroups { get; } = new List<ItemSetGroup>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup> ItemSetGroups
        {
            get
            {
                return base.ItemSetGroups ?? (base.ItemSetGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemSetGroup>(this.RawItemSetGroups)); 
            }
        }

        public ICollection<GameMapDefinition> RawMaps { get; } = new List<GameMapDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition> Maps
        {
            get
            {
                return base.Maps ?? (base.Maps = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, GameMapDefinition>(this.RawMaps)); 
            }
        }

        public ICollection<MonsterDefinition> RawMonsters { get; } = new List<MonsterDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition> Monsters
        {
            get
            {
                return base.Monsters ?? (base.Monsters = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, MonsterDefinition>(this.RawMonsters)); 
            }
        }

        public ICollection<AttributeDefinition> RawAttributes { get; } = new List<AttributeDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeDefinition> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeDefinition, AttributeDefinition>(this.RawAttributes)); 
            }
        }

        public ICollection<MagicEffectDefinition> RawMagicEffects { get; } = new List<MagicEffectDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition> MagicEffects
        {
            get
            {
                return base.MagicEffects ?? (base.MagicEffects = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, MagicEffectDefinition>(this.RawMagicEffects)); 
            }
        }

        public ICollection<MasterSkillRoot> RawMasterSkillRoots { get; } = new List<MasterSkillRoot>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot> MasterSkillRoots
        {
            get
            {
                return base.MasterSkillRoots ?? (base.MasterSkillRoots = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, MasterSkillRoot>(this.RawMasterSkillRoots)); 
            }
        }

        public ICollection<PlugInConfiguration> RawPlugInConfigurations { get; } = new List<PlugInConfiguration>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.PlugIns.PlugInConfiguration> PlugInConfigurations
        {
            get
            {
                return base.PlugInConfigurations ?? (base.PlugInConfigurations = new CollectionAdapter<MUnique.OpenMU.PlugIns.PlugInConfiguration, PlugInConfiguration>(this.RawPlugInConfigurations)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameMapDefinition"/>.
    /// </summary>
    [Table("GameMapDefinition", Schema = "config")]
    internal partial class GameMapDefinition : MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, IIdentifiable
    {
        public GameMapDefinition()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.DropItemGroups = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, GameMapDefinitionDropItemGroup>(this.JoinedDropItemGroups, joinEntity => joinEntity.DropItemGroup, entity => new GameMapDefinitionDropItemGroup { GameMapDefinition = this, GameMapDefinitionId = this.Id, DropItemGroup = (DropItemGroup)entity, DropItemGroupId = ((DropItemGroup)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<MonsterSpawnArea> RawMonsterSpawns { get; } = new List<MonsterSpawnArea>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea> MonsterSpawns
        {
            get
            {
                return base.MonsterSpawns ?? (base.MonsterSpawns = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea, MonsterSpawnArea>(this.RawMonsterSpawns)); 
            }
        }

        public ICollection<EnterGate> RawEnterGates { get; } = new List<EnterGate>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.EnterGate> EnterGates
        {
            get
            {
                return base.EnterGates ?? (base.EnterGates = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.EnterGate, EnterGate>(this.RawEnterGates)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="SafezoneMap"/>.
        /// </summary>
        public Guid? SafezoneMapId { get; set; }
        
        [ForeignKey("SafezoneMapId")]
        public GameMapDefinition RawSafezoneMap
        { 
            get { return base.SafezoneMap as GameMapDefinition; }
            set { base.SafezoneMap = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition SafezoneMap
        {
            get
            {
                return base.SafezoneMap;
            }
            
            set
            {
                base.SafezoneMap = value;
                this.SafezoneMapId = this.RawSafezoneMap?.Id;
            }
        }

        public ICollection<ExitGate> RawExitGates { get; } = new List<ExitGate>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ExitGate> ExitGates
        {
            get
            {
                return base.ExitGates ?? (base.ExitGates = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ExitGate, ExitGate>(this.RawExitGates)); 
            }
        }

        public ICollection<AttributeRequirement> RawMapRequirements { get; } = new List<AttributeRequirement>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> MapRequirements
        {
            get
            {
                return base.MapRequirements ?? (base.MapRequirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawMapRequirements)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration"/>.
    /// </summary>
    [Table("GameServerConfiguration", Schema = "config")]
    internal partial class GameServerConfiguration : MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration, IIdentifiable
    {
        public GameServerConfiguration()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.Maps = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, GameServerConfigurationGameMapDefinition>(this.JoinedMaps, joinEntity => joinEntity.GameMapDefinition, entity => new GameServerConfigurationGameMapDefinition { GameServerConfiguration = this, GameServerConfigurationId = this.Id, GameMapDefinition = (GameMapDefinition)entity, GameMapDefinitionId = ((GameMapDefinition)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerDefinition"/>.
    /// </summary>
    [Table("GameServerDefinition", Schema = "config")]
    internal partial class GameServerDefinition : MUnique.OpenMU.DataModel.Configuration.GameServerDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ServerConfiguration"/>.
        /// </summary>
        public Guid? ServerConfigurationId { get; set; }
        
        [ForeignKey("ServerConfigurationId")]
        public GameServerConfiguration RawServerConfiguration
        { 
            get { return base.ServerConfiguration as GameServerConfiguration; }
            set { base.ServerConfiguration = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration ServerConfiguration
        {
            get
            {
                return base.ServerConfiguration;
            }
            
            set
            {
                base.ServerConfiguration = value;
                this.ServerConfigurationId = this.RawServerConfiguration?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="GameConfiguration"/>.
        /// </summary>
        public Guid? GameConfigurationId { get; set; }
        
        [ForeignKey("GameConfigurationId")]
        public GameConfiguration RawGameConfiguration
        { 
            get { return base.GameConfiguration as GameConfiguration; }
            set { base.GameConfiguration = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameConfiguration GameConfiguration
        {
            get
            {
                return base.GameConfiguration;
            }
            
            set
            {
                base.GameConfiguration = value;
                this.GameConfigurationId = this.RawGameConfiguration?.Id;
            }
        }

        public ICollection<GameServerEndpoint> RawEndpoints { get; } = new List<GameServerEndpoint>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint> Endpoints
        {
            get
            {
                return base.Endpoints ?? (base.Endpoints = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint, GameServerEndpoint>(this.RawEndpoints)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint"/>.
    /// </summary>
    [Table("GameServerEndpoint", Schema = "config")]
    internal partial class GameServerEndpoint : MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Client"/>.
        /// </summary>
        public Guid? ClientId { get; set; }
        
        [ForeignKey("ClientId")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
                this.ClientId = this.RawClient?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Gate"/>.
    /// </summary>
    [Table("Gate", Schema = "config")]
    internal partial class Gate : MUnique.OpenMU.DataModel.Configuration.Gate, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.JewelMix"/>.
    /// </summary>
    [Table("JewelMix", Schema = "config")]
    internal partial class JewelMix : MUnique.OpenMU.DataModel.Configuration.JewelMix, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="SingleJewel"/>.
        /// </summary>
        public Guid? SingleJewelId { get; set; }
        
        [ForeignKey("SingleJewelId")]
        public ItemDefinition RawSingleJewel
        { 
            get { return base.SingleJewel as ItemDefinition; }
            set { base.SingleJewel = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition SingleJewel
        {
            get
            {
                return base.SingleJewel;
            }
            
            set
            {
                base.SingleJewel = value;
                this.SingleJewelId = this.RawSingleJewel?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="MixedJewel"/>.
        /// </summary>
        public Guid? MixedJewelId { get; set; }
        
        [ForeignKey("MixedJewelId")]
        public ItemDefinition RawMixedJewel
        { 
            get { return base.MixedJewel as ItemDefinition; }
            set { base.MixedJewel = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition MixedJewel
        {
            get
            {
                return base.MixedJewel;
            }
            
            set
            {
                base.MixedJewel = value;
                this.MixedJewelId = this.RawMixedJewel?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage"/>.
    /// </summary>
    [Table("LevelDependentDamage", Schema = "config")]
    internal partial class LevelDependentDamage : MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition"/>.
    /// </summary>
    [Table("MagicEffectDefinition", Schema = "config")]
    internal partial class MagicEffectDefinition : MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="PowerUpDefinition"/>.
        /// </summary>
        public Guid? PowerUpDefinitionId { get; set; }
        
        [ForeignKey("PowerUpDefinitionId")]
        public PowerUpDefinitionWithDuration RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinitionWithDuration; }
            set { base.PowerUpDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
                this.PowerUpDefinitionId = this.RawPowerUpDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition"/>.
    /// </summary>
    [Table("MasterSkillDefinition", Schema = "config")]
    internal partial class MasterSkillDefinition : MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition, IIdentifiable
    {
        public MasterSkillDefinition()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.RequiredMasterSkills = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Skill, MasterSkillDefinitionSkill>(this.JoinedRequiredMasterSkills, joinEntity => joinEntity.Skill, entity => new MasterSkillDefinitionSkill { MasterSkillDefinition = this, MasterSkillDefinitionId = this.Id, Skill = (Skill)entity, SkillId = ((Skill)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Root"/>.
        /// </summary>
        public Guid? RootId { get; set; }
        
        [ForeignKey("RootId")]
        public MasterSkillRoot RawRoot
        { 
            get { return base.Root as MasterSkillRoot; }
            set { base.Root = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot Root
        {
            get
            {
                return base.Root;
            }
            
            set
            {
                base.Root = value;
                this.RootId = this.RawRoot?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="TargetAttribute"/>.
        /// </summary>
        public Guid? TargetAttributeId { get; set; }
        
        [ForeignKey("TargetAttributeId")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
                this.TargetAttributeId = this.RawTargetAttribute?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="ReplacedSkill"/>.
        /// </summary>
        public Guid? ReplacedSkillId { get; set; }
        
        [ForeignKey("ReplacedSkillId")]
        public Skill RawReplacedSkill
        { 
            get { return base.ReplacedSkill as Skill; }
            set { base.ReplacedSkill = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Skill ReplacedSkill
        {
            get
            {
                return base.ReplacedSkill;
            }
            
            set
            {
                base.ReplacedSkill = value;
                this.ReplacedSkillId = this.RawReplacedSkill?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot"/>.
    /// </summary>
    [Table("MasterSkillRoot", Schema = "config")]
    internal partial class MasterSkillRoot : MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterAttribute"/>.
    /// </summary>
    [Table("MonsterAttribute", Schema = "config")]
    internal partial class MonsterAttribute : MUnique.OpenMU.DataModel.Configuration.MonsterAttribute, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="AttributeDefinition"/>.
        /// </summary>
        public Guid? AttributeDefinitionId { get; set; }
        
        [ForeignKey("AttributeDefinitionId")]
        public AttributeDefinition RawAttributeDefinition
        { 
            get { return base.AttributeDefinition as AttributeDefinition; }
            set { base.AttributeDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition AttributeDefinition
        {
            get
            {
                return base.AttributeDefinition;
            }
            
            set
            {
                base.AttributeDefinition = value;
                this.AttributeDefinitionId = this.RawAttributeDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterDefinition"/>.
    /// </summary>
    [Table("MonsterDefinition", Schema = "config")]
    internal partial class MonsterDefinition : MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, IIdentifiable
    {
        public MonsterDefinition()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.DropItemGroups = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, MonsterDefinitionDropItemGroup>(this.JoinedDropItemGroups, joinEntity => joinEntity.DropItemGroup, entity => new MonsterDefinitionDropItemGroup { MonsterDefinition = this, MonsterDefinitionId = this.Id, DropItemGroup = (DropItemGroup)entity, DropItemGroupId = ((DropItemGroup)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="AttackSkill"/>.
        /// </summary>
        public Guid? AttackSkillId { get; set; }
        
        [ForeignKey("AttackSkillId")]
        public Skill RawAttackSkill
        { 
            get { return base.AttackSkill as Skill; }
            set { base.AttackSkill = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Skill AttackSkill
        {
            get
            {
                return base.AttackSkill;
            }
            
            set
            {
                base.AttackSkill = value;
                this.AttackSkillId = this.RawAttackSkill?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="MerchantStore"/>.
        /// </summary>
        public Guid? MerchantStoreId { get; set; }
        
        [ForeignKey("MerchantStoreId")]
        public ItemStorage RawMerchantStore
        { 
            get { return base.MerchantStore as ItemStorage; }
            set { base.MerchantStore = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage MerchantStore
        {
            get
            {
                return base.MerchantStore;
            }
            
            set
            {
                base.MerchantStore = value;
                this.MerchantStoreId = this.RawMerchantStore?.Id;
            }
        }

        public ICollection<ItemCrafting> RawItemCraftings { get; } = new List<ItemCrafting>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting> ItemCraftings
        {
            get
            {
                return base.ItemCraftings ?? (base.ItemCraftings = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting, ItemCrafting>(this.RawItemCraftings)); 
            }
        }

        public ICollection<MonsterAttribute> RawAttributes { get; } = new List<MonsterAttribute>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute, MonsterAttribute>(this.RawAttributes)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea"/>.
    /// </summary>
    [Table("MonsterSpawnArea", Schema = "config")]
    internal partial class MonsterSpawnArea : MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="MonsterDefinition"/>.
        /// </summary>
        public Guid? MonsterDefinitionId { get; set; }
        
        [ForeignKey("MonsterDefinitionId")]
        public MonsterDefinition RawMonsterDefinition
        { 
            get { return base.MonsterDefinition as MonsterDefinition; }
            set { base.MonsterDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.MonsterDefinition MonsterDefinition
        {
            get
            {
                return base.MonsterDefinition;
            }
            
            set
            {
                base.MonsterDefinition = value;
                this.MonsterDefinitionId = this.RawMonsterDefinition?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="GameMap"/>.
        /// </summary>
        public Guid? GameMapId { get; set; }
        
        [ForeignKey("GameMapId")]
        public GameMapDefinition RawGameMap
        { 
            get { return base.GameMap as GameMapDefinition; }
            set { base.GameMap = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition GameMap
        {
            get
            {
                return base.GameMap;
            }
            
            set
            {
                base.GameMap = value;
                this.GameMapId = this.RawGameMap?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Skill"/>.
    /// </summary>
    [Table("Skill", Schema = "config")]
    internal partial class Skill : MUnique.OpenMU.DataModel.Configuration.Skill, IIdentifiable
    {
        public Skill()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.QualifiedCharacters = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, SkillCharacterClass>(this.JoinedQualifiedCharacters, joinEntity => joinEntity.CharacterClass, entity => new SkillCharacterClass { Skill = this, SkillId = this.Id, CharacterClass = (CharacterClass)entity, CharacterClassId = ((CharacterClass)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<AttributeRequirement> RawRequirements { get; } = new List<AttributeRequirement>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> Requirements
        {
            get
            {
                return base.Requirements ?? (base.Requirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawRequirements)); 
            }
        }

        public ICollection<AttributeRequirement> RawConsumeRequirements { get; } = new List<AttributeRequirement>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> ConsumeRequirements
        {
            get
            {
                return base.ConsumeRequirements ?? (base.ConsumeRequirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawConsumeRequirements)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="ElementalModifierTarget"/>.
        /// </summary>
        public Guid? ElementalModifierTargetId { get; set; }
        
        [ForeignKey("ElementalModifierTargetId")]
        public AttributeDefinition RawElementalModifierTarget
        { 
            get { return base.ElementalModifierTarget as AttributeDefinition; }
            set { base.ElementalModifierTarget = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition ElementalModifierTarget
        {
            get
            {
                return base.ElementalModifierTarget;
            }
            
            set
            {
                base.ElementalModifierTarget = value;
                this.ElementalModifierTargetId = this.RawElementalModifierTarget?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="MagicEffectDef"/>.
        /// </summary>
        public Guid? MagicEffectDefId { get; set; }
        
        [ForeignKey("MagicEffectDefId")]
        public MagicEffectDefinition RawMagicEffectDef
        { 
            get { return base.MagicEffectDef as MagicEffectDefinition; }
            set { base.MagicEffectDef = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition MagicEffectDef
        {
            get
            {
                return base.MagicEffectDef;
            }
            
            set
            {
                base.MagicEffectDef = value;
                this.MagicEffectDefId = this.RawMagicEffectDef?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="MasterDefinition"/>.
        /// </summary>
        public Guid? MasterDefinitionId { get; set; }
        
        [ForeignKey("MasterDefinitionId")]
        public MasterSkillDefinition RawMasterDefinition
        { 
            get { return base.MasterDefinition as MasterSkillDefinition; }
            set { base.MasterDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition MasterDefinition
        {
            get
            {
                return base.MasterDefinition;
            }
            
            set
            {
                base.MasterDefinition = value;
                this.MasterDefinitionId = this.RawMasterDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition"/>.
    /// </summary>
    [Table("StatAttributeDefinition", Schema = "config")]
    internal partial class StatAttributeDefinition : MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition, IIdentifiable
    {
        public StatAttributeDefinition()
        {
            this.InitJoinCollections();
        } 

        public StatAttributeDefinition(MUnique.OpenMU.AttributeSystem.AttributeDefinition attribute, System.Single baseValue, System.Boolean increasableByPlayer)
          : base (attribute, baseValue, increasableByPlayer)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Attribute"/>.
        /// </summary>
        public Guid? AttributeId { get; set; }
        
        [ForeignKey("AttributeId")]
        public AttributeDefinition RawAttribute
        { 
            get { return base.Attribute as AttributeDefinition; }
            set { base.Attribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Attribute
        {
            get
            {
                return base.Attribute;
            }
            
            set
            {
                base.Attribute = value;
                this.AttributeId = this.RawAttribute?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.WarpInfo"/>.
    /// </summary>
    [Table("WarpInfo", Schema = "config")]
    internal partial class WarpInfo : MUnique.OpenMU.DataModel.Configuration.WarpInfo, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Gate"/>.
        /// </summary>
        public Guid? GateId { get; set; }
        
        [ForeignKey("GateId")]
        public ExitGate RawGate
        { 
            get { return base.Gate as ExitGate; }
            set { base.Gate = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.ExitGate Gate
        {
            get
            {
                return base.Gate;
            }
            
            set
            {
                base.Gate = value;
                this.GateId = this.RawGate?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement"/>.
    /// </summary>
    [Table("AttributeRequirement", Schema = "config")]
    internal partial class AttributeRequirement : MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Attribute"/>.
        /// </summary>
        public Guid? AttributeId { get; set; }
        
        [ForeignKey("AttributeId")]
        public AttributeDefinition RawAttribute
        { 
            get { return base.Attribute as AttributeDefinition; }
            set { base.Attribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Attribute
        {
            get
            {
                return base.Attribute;
            }
            
            set
            {
                base.Attribute = value;
                this.AttributeId = this.RawAttribute?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption"/>.
    /// </summary>
    [Table("IncreasableItemOption", Schema = "config")]
    internal partial class IncreasableItemOption : MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<ItemOptionOfLevel> RawLevelDependentOptions { get; } = new List<ItemOptionOfLevel>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel> LevelDependentOptions
        {
            get
            {
                return base.LevelDependentOptions ?? (base.LevelDependentOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel, ItemOptionOfLevel>(this.RawLevelDependentOptions)); 
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="OptionType"/>.
        /// </summary>
        public Guid? OptionTypeId { get; set; }
        
        [ForeignKey("OptionTypeId")]
        public ItemOptionType RawOptionType
        { 
            get { return base.OptionType as ItemOptionType; }
            set { base.OptionType = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType OptionType
        {
            get
            {
                return base.OptionType;
            }
            
            set
            {
                base.OptionType = value;
                this.OptionTypeId = this.RawOptionType?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="PowerUpDefinition"/>.
        /// </summary>
        public Guid? PowerUpDefinitionId { get; set; }
        
        [ForeignKey("PowerUpDefinitionId")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
                this.PowerUpDefinitionId = this.RawPowerUpDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition"/>.
    /// </summary>
    [Table("ItemBasePowerUpDefinition", Schema = "config")]
    internal partial class ItemBasePowerUpDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="TargetAttribute"/>.
        /// </summary>
        public Guid? TargetAttributeId { get; set; }
        
        [ForeignKey("TargetAttributeId")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
                this.TargetAttributeId = this.RawTargetAttribute?.Id;
            }
        }

        public ICollection<LevelBonus> RawBonusPerLevel { get; } = new List<LevelBonus>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus> BonusPerLevel
        {
            get
            {
                return base.BonusPerLevel ?? (base.BonusPerLevel = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus, LevelBonus>(this.RawBonusPerLevel)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition"/>.
    /// </summary>
    [Table("ItemDefinition", Schema = "config")]
    internal partial class ItemDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, IIdentifiable
    {
        public ItemDefinition()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.QualifiedCharacters = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, ItemDefinitionCharacterClass>(this.JoinedQualifiedCharacters, joinEntity => joinEntity.CharacterClass, entity => new ItemDefinitionCharacterClass { ItemDefinition = this, ItemDefinitionId = this.Id, CharacterClass = (CharacterClass)entity, CharacterClassId = ((CharacterClass)entity).Id});
          
            this.PossibleItemSetGroups = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemDefinitionItemSetGroup>(this.JoinedPossibleItemSetGroups, joinEntity => joinEntity.ItemSetGroup, entity => new ItemDefinitionItemSetGroup { ItemDefinition = this, ItemDefinitionId = this.Id, ItemSetGroup = (ItemSetGroup)entity, ItemSetGroupId = ((ItemSetGroup)entity).Id});
          
            this.PossibleItemOptions = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, ItemDefinitionItemOptionDefinition>(this.JoinedPossibleItemOptions, joinEntity => joinEntity.ItemOptionDefinition, entity => new ItemDefinitionItemOptionDefinition { ItemDefinition = this, ItemDefinitionId = this.Id, ItemOptionDefinition = (ItemOptionDefinition)entity, ItemOptionDefinitionId = ((ItemOptionDefinition)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ItemSlot"/>.
        /// </summary>
        public Guid? ItemSlotId { get; set; }
        
        [ForeignKey("ItemSlotId")]
        public ItemSlotType RawItemSlot
        { 
            get { return base.ItemSlot as ItemSlotType; }
            set { base.ItemSlot = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType ItemSlot
        {
            get
            {
                return base.ItemSlot;
            }
            
            set
            {
                base.ItemSlot = value;
                this.ItemSlotId = this.RawItemSlot?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="Skill"/>.
        /// </summary>
        public Guid? SkillId { get; set; }
        
        [ForeignKey("SkillId")]
        public Skill RawSkill
        { 
            get { return base.Skill as Skill; }
            set { base.Skill = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Skill Skill
        {
            get
            {
                return base.Skill;
            }
            
            set
            {
                base.Skill = value;
                this.SkillId = this.RawSkill?.Id;
            }
        }

        public ICollection<AttributeRequirement> RawRequirements { get; } = new List<AttributeRequirement>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> Requirements
        {
            get
            {
                return base.Requirements ?? (base.Requirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawRequirements)); 
            }
        }

        public ICollection<ItemBasePowerUpDefinition> RawBasePowerUpAttributes { get; } = new List<ItemBasePowerUpDefinition>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition> BasePowerUpAttributes
        {
            get
            {
                return base.BasePowerUpAttributes ?? (base.BasePowerUpAttributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition, ItemBasePowerUpDefinition>(this.RawBasePowerUpAttributes)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet"/>.
    /// </summary>
    [Table("ItemOfItemSet", Schema = "config")]
    internal partial class ItemOfItemSet : MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ItemDefinition"/>.
        /// </summary>
        public Guid? ItemDefinitionId { get; set; }
        
        [ForeignKey("ItemDefinitionId")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
                this.ItemDefinitionId = this.RawItemDefinition?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="BonusOption"/>.
        /// </summary>
        public Guid? BonusOptionId { get; set; }
        
        [ForeignKey("BonusOptionId")]
        public IncreasableItemOption RawBonusOption
        { 
            get { return base.BonusOption as IncreasableItemOption; }
            set { base.BonusOption = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption BonusOption
        {
            get
            {
                return base.BonusOption;
            }
            
            set
            {
                base.BonusOption = value;
                this.BonusOptionId = this.RawBonusOption?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOption"/>.
    /// </summary>
    [Table("ItemOption", Schema = "config")]
    internal partial class ItemOption : MUnique.OpenMU.DataModel.Configuration.Items.ItemOption, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="OptionType"/>.
        /// </summary>
        public Guid? OptionTypeId { get; set; }
        
        [ForeignKey("OptionTypeId")]
        public ItemOptionType RawOptionType
        { 
            get { return base.OptionType as ItemOptionType; }
            set { base.OptionType = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType OptionType
        {
            get
            {
                return base.OptionType;
            }
            
            set
            {
                base.OptionType = value;
                this.OptionTypeId = this.RawOptionType?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="PowerUpDefinition"/>.
        /// </summary>
        public Guid? PowerUpDefinitionId { get; set; }
        
        [ForeignKey("PowerUpDefinitionId")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
                this.PowerUpDefinitionId = this.RawPowerUpDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition"/>.
    /// </summary>
    [Table("ItemOptionDefinition", Schema = "config")]
    internal partial class ItemOptionDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<IncreasableItemOption> RawPossibleOptions { get; } = new List<IncreasableItemOption>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption> PossibleOptions
        {
            get
            {
                return base.PossibleOptions ?? (base.PossibleOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IncreasableItemOption>(this.RawPossibleOptions)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel"/>.
    /// </summary>
    [Table("ItemOptionOfLevel", Schema = "config")]
    internal partial class ItemOptionOfLevel : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="PowerUpDefinition"/>.
        /// </summary>
        public Guid? PowerUpDefinitionId { get; set; }
        
        [ForeignKey("PowerUpDefinitionId")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
                this.PowerUpDefinitionId = this.RawPowerUpDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType"/>.
    /// </summary>
    [Table("ItemOptionType", Schema = "config")]
    internal partial class ItemOptionType : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup"/>.
    /// </summary>
    [Table("ItemSetGroup", Schema = "config")]
    internal partial class ItemSetGroup : MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<IncreasableItemOption> RawOptions { get; } = new List<IncreasableItemOption>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption> Options
        {
            get
            {
                return base.Options ?? (base.Options = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IncreasableItemOption>(this.RawOptions)); 
            }
        }

        public ICollection<ItemOfItemSet> RawItems { get; } = new List<ItemOfItemSet>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet, ItemOfItemSet>(this.RawItems)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType"/>.
    /// </summary>
    [Table("ItemSlotType", Schema = "config")]
    internal partial class ItemSlotType : MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

[Column("ItemSlots")]
        [JsonProperty("ItemSlots")]
        public string RawItemSlots { get; set; }
                
        /// <inheritdoc/>
        [JsonIgnore]
        [NotMapped]
        public override ICollection<System.Int32> ItemSlots
        {
            get
            {
                return base.ItemSlots ?? (base.ItemSlots = new CollectionToStringAdapter<System.Int32>(this.RawItemSlots, newString => this.RawItemSlots = newString)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus"/>.
    /// </summary>
    [Table("LevelBonus", Schema = "config")]
    internal partial class LevelBonus : MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus, IIdentifiable
    {
        public LevelBonus()
        {
            this.InitJoinCollections();
        } 

        public LevelBonus(System.Int32 level, System.Single constantValue)
          : base (level, constantValue)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting"/>.
    /// </summary>
    [Table("ItemCrafting", Schema = "config")]
    internal partial class ItemCrafting : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="SimpleCraftingSettings"/>.
        /// </summary>
        public Guid? SimpleCraftingSettingsId { get; set; }
        
        [ForeignKey("SimpleCraftingSettingsId")]
        public SimpleCraftingSettings RawSimpleCraftingSettings
        { 
            get { return base.SimpleCraftingSettings as SimpleCraftingSettings; }
            set { base.SimpleCraftingSettings = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings SimpleCraftingSettings
        {
            get
            {
                return base.SimpleCraftingSettings;
            }
            
            set
            {
                base.SimpleCraftingSettings = value;
                this.SimpleCraftingSettingsId = this.RawSimpleCraftingSettings?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem"/>.
    /// </summary>
    [Table("ItemCraftingRequiredItem", Schema = "config")]
    internal partial class ItemCraftingRequiredItem : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem, IIdentifiable
    {
        public ItemCraftingRequiredItem()
        {
            this.InitJoinCollections();
        }         

        protected void InitJoinCollections()
        {
          
            this.RequiredItemOptions = new ManyToManyCollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemCraftingRequiredItemItemOptionType>(this.JoinedRequiredItemOptions, joinEntity => joinEntity.ItemOptionType, entity => new ItemCraftingRequiredItemItemOptionType { ItemCraftingRequiredItem = this, ItemCraftingRequiredItemId = this.Id, ItemOptionType = (ItemOptionType)entity, ItemOptionTypeId = ((ItemOptionType)entity).Id});
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ItemDefinition"/>.
        /// </summary>
        public Guid? ItemDefinitionId { get; set; }
        
        [ForeignKey("ItemDefinitionId")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
                this.ItemDefinitionId = this.RawItemDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem"/>.
    /// </summary>
    [Table("ItemCraftingResultItem", Schema = "config")]
    internal partial class ItemCraftingResultItem : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="ItemDefinition"/>.
        /// </summary>
        public Guid? ItemDefinitionId { get; set; }
        
        [ForeignKey("ItemDefinitionId")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
                this.ItemDefinitionId = this.RawItemDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings"/>.
    /// </summary>
    [Table("SimpleCraftingSettings", Schema = "config")]
    internal partial class SimpleCraftingSettings : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public IList<ItemCraftingRequiredItem> RawRequiredItems { get; } = new List<ItemCraftingRequiredItem>();        
        /// <inheritdoc/>
        [NotMapped]
        public override IList<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem> RequiredItems
        {
            get
            {
                return base.RequiredItems ?? (base.RequiredItems = new ListAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem, ItemCraftingRequiredItem>(this.RawRequiredItems)); 
            }
        }

        public IList<ItemCraftingResultItem> RawResultItems { get; } = new List<ItemCraftingResultItem>();        
        /// <inheritdoc/>
        [NotMapped]
        public override IList<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem> ResultItems
        {
            get
            {
                return base.ResultItems ?? (base.ResultItems = new ListAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem, ItemCraftingResultItem>(this.RawResultItems)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition"/>.
    /// </summary>
    [Table("PowerUpDefinition", Schema = "config")]
    internal partial class PowerUpDefinition : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="TargetAttribute"/>.
        /// </summary>
        public Guid? TargetAttributeId { get; set; }
        
        [ForeignKey("TargetAttributeId")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
                this.TargetAttributeId = this.RawTargetAttribute?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="Boost"/>.
        /// </summary>
        public Guid? BoostId { get; set; }
        
        [ForeignKey("BoostId")]
        public PowerUpDefinitionValue RawBoost
        { 
            get { return base.Boost as PowerUpDefinitionValue; }
            set { base.Boost = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Boost
        {
            get
            {
                return base.Boost;
            }
            
            set
            {
                base.Boost = value;
                this.BoostId = this.RawBoost?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue"/>.
    /// </summary>
    [Table("PowerUpDefinitionValue", Schema = "config")]
    internal partial class PowerUpDefinitionValue : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

public ICollection<AttributeRelationship> RawRelatedValues { get; } = new List<AttributeRelationship>();        
        /// <inheritdoc/>
        [NotMapped]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeRelationship> RelatedValues
        {
            get
            {
                return base.RelatedValues ?? (base.RelatedValues = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeRelationship, AttributeRelationship>(this.RawRelatedValues)); 
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration"/>.
    /// </summary>
    [Table("PowerUpDefinitionWithDuration", Schema = "config")]
    internal partial class PowerUpDefinitionWithDuration : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Duration"/>.
        /// </summary>
        public Guid? DurationId { get; set; }
        
        [ForeignKey("DurationId")]
        public PowerUpDefinitionValue RawDuration
        { 
            get { return base.Duration as PowerUpDefinitionValue; }
            set { base.Duration = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Duration
        {
            get
            {
                return base.Duration;
            }
            
            set
            {
                base.Duration = value;
                this.DurationId = this.RawDuration?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="TargetAttribute"/>.
        /// </summary>
        public Guid? TargetAttributeId { get; set; }
        
        [ForeignKey("TargetAttributeId")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
                this.TargetAttributeId = this.RawTargetAttribute?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="Boost"/>.
        /// </summary>
        public Guid? BoostId { get; set; }
        
        [ForeignKey("BoostId")]
        public PowerUpDefinitionValue RawBoost
        { 
            get { return base.Boost as PowerUpDefinitionValue; }
            set { base.Boost = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Boost
        {
            get
            {
                return base.Boost;
            }
            
            set
            {
                base.Boost = value;
                this.BoostId = this.RawBoost?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.AttributeSystem.AttributeDefinition"/>.
    /// </summary>
    [Table("AttributeDefinition", Schema = "config")]
    internal partial class AttributeDefinition : MUnique.OpenMU.AttributeSystem.AttributeDefinition, IIdentifiable
    {
        public AttributeDefinition()
        {
            this.InitJoinCollections();
        } 

        public AttributeDefinition(System.Guid id, System.String designation, System.String description)
          : base (id, designation, description)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.AttributeSystem.StatAttribute"/>.
    /// </summary>
    [Table("StatAttribute", Schema = "data")]
    internal partial class StatAttribute : MUnique.OpenMU.AttributeSystem.StatAttribute, IIdentifiable
    {
        public StatAttribute()
        {
            this.InitJoinCollections();
        } 

        public StatAttribute(MUnique.OpenMU.AttributeSystem.AttributeDefinition definition, System.Single baseValue)
          : base (definition, baseValue)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Definition"/>.
        /// </summary>
        public Guid? DefinitionId { get; set; }
        
        [ForeignKey("DefinitionId")]
        public AttributeDefinition RawDefinition
        { 
            get { return base.Definition as AttributeDefinition; }
            set { base.Definition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            protected set
            {
                base.Definition = value;
                this.DefinitionId = this.RawDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.AttributeSystem.ConstValueAttribute"/>.
    /// </summary>
    [Table("ConstValueAttribute", Schema = "config")]
    internal partial class ConstValueAttribute : MUnique.OpenMU.AttributeSystem.ConstValueAttribute, IIdentifiable
    {

        public ConstValueAttribute(System.Single value, MUnique.OpenMU.AttributeSystem.AttributeDefinition definition)
          : base (value, definition)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="Definition"/>.
        /// </summary>
        public Guid? DefinitionId { get; set; }
        
        [ForeignKey("DefinitionId")]
        public AttributeDefinition RawDefinition
        { 
            get { return base.Definition as AttributeDefinition; }
            set { base.Definition = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            protected set
            {
                base.Definition = value;
                this.DefinitionId = this.RawDefinition?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.AttributeSystem.AttributeRelationship"/>.
    /// </summary>
    [Table("AttributeRelationship", Schema = "config")]
    internal partial class AttributeRelationship : MUnique.OpenMU.AttributeSystem.AttributeRelationship, IIdentifiable
    {
        public AttributeRelationship()
        {
            this.InitJoinCollections();
        } 

        public AttributeRelationship(MUnique.OpenMU.AttributeSystem.AttributeDefinition targetAttribute, System.Single inputOperand, MUnique.OpenMU.AttributeSystem.AttributeDefinition inputAttribute)
          : base (targetAttribute, inputOperand, inputAttribute)
        {
            this.InitJoinCollections();
        }

        public AttributeRelationship(MUnique.OpenMU.AttributeSystem.AttributeDefinition targetAttribute, System.Single inputOperand, MUnique.OpenMU.AttributeSystem.AttributeDefinition inputAttribute, MUnique.OpenMU.AttributeSystem.InputOperator inputOperator)
          : base (targetAttribute, inputOperand, inputAttribute, inputOperator)
        {
            this.InitJoinCollections();
        }        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of <see cref="TargetAttribute"/>.
        /// </summary>
        public Guid? TargetAttributeId { get; set; }
        
        [ForeignKey("TargetAttributeId")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
                this.TargetAttributeId = this.RawTargetAttribute?.Id;
            }
        }

                /// <summary>
        /// Gets or sets the identifier of <see cref="InputAttribute"/>.
        /// </summary>
        public Guid? InputAttributeId { get; set; }
        
        [ForeignKey("InputAttributeId")]
        public AttributeDefinition RawInputAttribute
        { 
            get { return base.InputAttribute as AttributeDefinition; }
            set { base.InputAttribute = value; } 
        }
                
        /// <inheritdoc/>
        [NotMapped]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition InputAttribute
        {
            get
            {
                return base.InputAttribute;
            }
            
            set
            {
                base.InputAttribute = value;
                this.InputAttributeId = this.RawInputAttribute?.Id;
            }
        }

                
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.Interfaces.LetterHeader"/>.
    /// </summary>
    [Table("LetterHeader", Schema = "data")]
    internal partial class LetterHeader : MUnique.OpenMU.Interfaces.LetterHeader, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.Interfaces.Friend"/>.
    /// </summary>
    [Table("Friend", Schema = "data")]
    internal partial class Friend : MUnique.OpenMU.Interfaces.Friend, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.PlugIns.PlugInConfiguration"/>.
    /// </summary>
    [Table("PlugInConfiguration", Schema = "config")]
    internal partial class PlugInConfiguration : MUnique.OpenMU.PlugIns.PlugInConfiguration, IIdentifiable
    {        

        protected void InitJoinCollections()
        {
        }

        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }
    }

    /// <summary>
    /// DbContext which sets all extended base types to ignore.
    /// </summary>
    public class ExtendedTypeContext : Microsoft.EntityFrameworkCore.DbContext
    {
        /// <inheritdoc/>
        protected override void OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder)
        {
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.Account>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.AppearanceData>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.Character>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.Guild>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.GuildMember>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.Item>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.ItemAppearance>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.ItemOptionLink>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.ItemStorage>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.LetterBody>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Entities.SkillEntry>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.CharacterClass>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.DropItemGroup>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.EnterGate>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ExitGate>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameClientDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameConfiguration>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameServerDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Gate>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.JewelMix>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Skill>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.WarpInfo>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemOption>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue>();
            modelBuilder.Ignore<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration>();
            modelBuilder.Ignore<MUnique.OpenMU.AttributeSystem.AttributeDefinition>();
            modelBuilder.Ignore<MUnique.OpenMU.AttributeSystem.StatAttribute>();
            modelBuilder.Ignore<MUnique.OpenMU.AttributeSystem.ConstValueAttribute>();
            modelBuilder.Ignore<MUnique.OpenMU.AttributeSystem.AttributeRelationship>();
            modelBuilder.Ignore<MUnique.OpenMU.Interfaces.LetterHeader>();
            modelBuilder.Ignore<MUnique.OpenMU.Interfaces.Friend>();
            modelBuilder.Ignore<MUnique.OpenMU.PlugIns.PlugInConfiguration>();
        }

        /// <summary>
        /// Adds the generated join definitions.
        /// </summary>
        /// <param name="modelBuilder">The model builder.</param>
        protected void AddJoinDefinitions(Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Account>().HasMany(entity => entity.JoinedUnlockedCharacterClasses).WithOne(join => join.Account);
            modelBuilder.Entity<AccountCharacterClass>().HasKey(join => new { join.AccountId, join.CharacterClassId });
            modelBuilder.Entity<Character>().HasMany(entity => entity.JoinedDropItemGroups).WithOne(join => join.Character);
            modelBuilder.Entity<CharacterDropItemGroup>().HasKey(join => new { join.CharacterId, join.DropItemGroupId });
            modelBuilder.Entity<Item>().HasMany(entity => entity.JoinedItemSetGroups).WithOne(join => join.Item);
            modelBuilder.Entity<ItemItemSetGroup>().HasKey(join => new { join.ItemId, join.ItemSetGroupId });
            modelBuilder.Entity<ItemAppearance>().HasMany(entity => entity.JoinedVisibleOptions).WithOne(join => join.ItemAppearance);
            modelBuilder.Entity<ItemAppearanceItemOptionType>().HasKey(join => new { join.ItemAppearanceId, join.ItemOptionTypeId });
            modelBuilder.Entity<DropItemGroup>().HasMany(entity => entity.JoinedPossibleItems).WithOne(join => join.DropItemGroup);
            modelBuilder.Entity<DropItemGroupItemDefinition>().HasKey(join => new { join.DropItemGroupId, join.ItemDefinitionId });
            modelBuilder.Entity<GameMapDefinition>().HasMany(entity => entity.JoinedDropItemGroups).WithOne(join => join.GameMapDefinition);
            modelBuilder.Entity<GameMapDefinitionDropItemGroup>().HasKey(join => new { join.GameMapDefinitionId, join.DropItemGroupId });
            modelBuilder.Entity<GameServerConfiguration>().HasMany(entity => entity.JoinedMaps).WithOne(join => join.GameServerConfiguration);
            modelBuilder.Entity<GameServerConfigurationGameMapDefinition>().HasKey(join => new { join.GameServerConfigurationId, join.GameMapDefinitionId });
            modelBuilder.Entity<MasterSkillDefinition>().HasMany(entity => entity.JoinedRequiredMasterSkills).WithOne(join => join.MasterSkillDefinition);
            modelBuilder.Entity<MasterSkillDefinitionSkill>().HasKey(join => new { join.MasterSkillDefinitionId, join.SkillId });
            modelBuilder.Entity<MonsterDefinition>().HasMany(entity => entity.JoinedDropItemGroups).WithOne(join => join.MonsterDefinition);
            modelBuilder.Entity<MonsterDefinitionDropItemGroup>().HasKey(join => new { join.MonsterDefinitionId, join.DropItemGroupId });
            modelBuilder.Entity<Skill>().HasMany(entity => entity.JoinedQualifiedCharacters).WithOne(join => join.Skill);
            modelBuilder.Entity<SkillCharacterClass>().HasKey(join => new { join.SkillId, join.CharacterClassId });
            modelBuilder.Entity<ItemDefinition>().HasMany(entity => entity.JoinedQualifiedCharacters).WithOne(join => join.ItemDefinition);
            modelBuilder.Entity<ItemDefinitionCharacterClass>().HasKey(join => new { join.ItemDefinitionId, join.CharacterClassId });
            modelBuilder.Entity<ItemDefinition>().HasMany(entity => entity.JoinedPossibleItemSetGroups).WithOne(join => join.ItemDefinition);
            modelBuilder.Entity<ItemDefinitionItemSetGroup>().HasKey(join => new { join.ItemDefinitionId, join.ItemSetGroupId });
            modelBuilder.Entity<ItemDefinition>().HasMany(entity => entity.JoinedPossibleItemOptions).WithOne(join => join.ItemDefinition);
            modelBuilder.Entity<ItemDefinitionItemOptionDefinition>().HasKey(join => new { join.ItemDefinitionId, join.ItemOptionDefinitionId });
            modelBuilder.Entity<ItemCraftingRequiredItem>().HasMany(entity => entity.JoinedRequiredItemOptions).WithOne(join => join.ItemCraftingRequiredItem);
            modelBuilder.Entity<ItemCraftingRequiredItemItemOptionType>().HasKey(join => new { join.ItemCraftingRequiredItemId, join.ItemOptionTypeId });
        }
    }
        
    /// <summary>
    /// Configures Mapster to properly map these classes to the Persistence.BasicModel.
    /// </summary>
    public static class MapsterConfigurator
    {
        private static bool isConfigured;

        /// <summary>
        /// Ensures that Mapster is configured to properly map these EF-Core persistence classes to the Persistence.BasicModel.
        /// </summary>
        public static void EnsureConfigured()
        {
            if (isConfigured)
            {
                return;
            }

            Mapster.TypeAdapterConfig.GlobalSettings.Default.PreserveReference(true);
            Mapster.TypeAdapterConfig.GlobalSettings.Default.IgnoreMember((member, side) => member.Name.StartsWith("Raw"));
            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.Account, MUnique.OpenMU.DataModel.Entities.Account>()
                            .Include<Account, BasicModel.Account>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.AppearanceData, MUnique.OpenMU.DataModel.Entities.AppearanceData>()
                            .Include<AppearanceData, BasicModel.AppearanceData>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.Character, MUnique.OpenMU.DataModel.Entities.Character>()
                            .Include<Character, BasicModel.Character>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.Guild, MUnique.OpenMU.DataModel.Entities.Guild>()
                            .Include<Guild, BasicModel.Guild>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.GuildMember, MUnique.OpenMU.DataModel.Entities.GuildMember>()
                            .Include<GuildMember, BasicModel.GuildMember>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.Item, MUnique.OpenMU.DataModel.Entities.Item>()
                            .Include<Item, BasicModel.Item>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.ItemAppearance, MUnique.OpenMU.DataModel.Entities.ItemAppearance>()
                            .Include<ItemAppearance, BasicModel.ItemAppearance>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.ItemOptionLink, MUnique.OpenMU.DataModel.Entities.ItemOptionLink>()
                            .Include<ItemOptionLink, BasicModel.ItemOptionLink>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.ItemStorage, MUnique.OpenMU.DataModel.Entities.ItemStorage>()
                            .Include<ItemStorage, BasicModel.ItemStorage>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.LetterBody, MUnique.OpenMU.DataModel.Entities.LetterBody>()
                            .Include<LetterBody, BasicModel.LetterBody>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Entities.SkillEntry, MUnique.OpenMU.DataModel.Entities.SkillEntry>()
                            .Include<SkillEntry, BasicModel.SkillEntry>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.CharacterClass, MUnique.OpenMU.DataModel.Configuration.CharacterClass>()
                            .Include<CharacterClass, BasicModel.CharacterClass>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition, MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition>()
                            .Include<ChatServerDefinition, BasicModel.ChatServerDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint, MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint>()
                            .Include<ChatServerEndpoint, BasicModel.ChatServerEndpoint>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition, MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition>()
                            .Include<ConnectServerDefinition, BasicModel.ConnectServerDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, MUnique.OpenMU.DataModel.Configuration.DropItemGroup>()
                            .Include<DropItemGroup, BasicModel.DropItemGroup>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.EnterGate, MUnique.OpenMU.DataModel.Configuration.EnterGate>()
                            .Include<EnterGate, BasicModel.EnterGate>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ExitGate, MUnique.OpenMU.DataModel.Configuration.ExitGate>()
                            .Include<ExitGate, BasicModel.ExitGate>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameClientDefinition, MUnique.OpenMU.DataModel.Configuration.GameClientDefinition>()
                            .Include<GameClientDefinition, BasicModel.GameClientDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameConfiguration, MUnique.OpenMU.DataModel.Configuration.GameConfiguration>()
                            .Include<GameConfiguration, BasicModel.GameConfiguration>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, MUnique.OpenMU.DataModel.Configuration.GameMapDefinition>()
                            .Include<GameMapDefinition, BasicModel.GameMapDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration, MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration>()
                            .Include<GameServerConfiguration, BasicModel.GameServerConfiguration>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameServerDefinition, MUnique.OpenMU.DataModel.Configuration.GameServerDefinition>()
                            .Include<GameServerDefinition, BasicModel.GameServerDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint, MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint>()
                            .Include<GameServerEndpoint, BasicModel.GameServerEndpoint>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Gate, MUnique.OpenMU.DataModel.Configuration.Gate>()
                            .Include<Gate, BasicModel.Gate>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.JewelMix, MUnique.OpenMU.DataModel.Configuration.JewelMix>()
                            .Include<JewelMix, BasicModel.JewelMix>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage, MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage>()
                            .Include<LevelDependentDamage, BasicModel.LevelDependentDamage>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition>()
                            .Include<MagicEffectDefinition, BasicModel.MagicEffectDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition, MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition>()
                            .Include<MasterSkillDefinition, BasicModel.MasterSkillDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot>()
                            .Include<MasterSkillRoot, BasicModel.MasterSkillRoot>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute, MUnique.OpenMU.DataModel.Configuration.MonsterAttribute>()
                            .Include<MonsterAttribute, BasicModel.MonsterAttribute>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, MUnique.OpenMU.DataModel.Configuration.MonsterDefinition>()
                            .Include<MonsterDefinition, BasicModel.MonsterDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea, MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea>()
                            .Include<MonsterSpawnArea, BasicModel.MonsterSpawnArea>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Skill, MUnique.OpenMU.DataModel.Configuration.Skill>()
                            .Include<Skill, BasicModel.Skill>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition, MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition>()
                            .Include<StatAttributeDefinition, BasicModel.StatAttributeDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.WarpInfo, MUnique.OpenMU.DataModel.Configuration.WarpInfo>()
                            .Include<WarpInfo, BasicModel.WarpInfo>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement>()
                            .Include<AttributeRequirement, BasicModel.AttributeRequirement>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption>()
                            .Include<IncreasableItemOption, BasicModel.IncreasableItemOption>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition, MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition>()
                            .Include<ItemBasePowerUpDefinition, BasicModel.ItemBasePowerUpDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition>()
                            .Include<ItemDefinition, BasicModel.ItemDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet, MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet>()
                            .Include<ItemOfItemSet, BasicModel.ItemOfItemSet>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemOption, MUnique.OpenMU.DataModel.Configuration.Items.ItemOption>()
                            .Include<ItemOption, BasicModel.ItemOption>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition>()
                            .Include<ItemOptionDefinition, BasicModel.ItemOptionDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel, MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel>()
                            .Include<ItemOptionOfLevel, BasicModel.ItemOptionOfLevel>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType>()
                            .Include<ItemOptionType, BasicModel.ItemOptionType>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup>()
                            .Include<ItemSetGroup, BasicModel.ItemSetGroup>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType>()
                            .Include<ItemSlotType, BasicModel.ItemSlotType>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus, MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus>()
                            .Include<LevelBonus, BasicModel.LevelBonus>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting, MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting>()
                            .Include<ItemCrafting, BasicModel.ItemCrafting>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem, MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem>()
                            .Include<ItemCraftingRequiredItem, BasicModel.ItemCraftingRequiredItem>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem, MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem>()
                            .Include<ItemCraftingResultItem, BasicModel.ItemCraftingResultItem>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings, MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings>()
                            .Include<SimpleCraftingSettings, BasicModel.SimpleCraftingSettings>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition, MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition>()
                            .Include<PowerUpDefinition, BasicModel.PowerUpDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue, MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue>()
                            .Include<PowerUpDefinitionValue, BasicModel.PowerUpDefinitionValue>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration, MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration>()
                            .Include<PowerUpDefinitionWithDuration, BasicModel.PowerUpDefinitionWithDuration>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.AttributeSystem.AttributeDefinition, MUnique.OpenMU.AttributeSystem.AttributeDefinition>()
                            .Include<AttributeDefinition, BasicModel.AttributeDefinition>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.AttributeSystem.StatAttribute, MUnique.OpenMU.AttributeSystem.StatAttribute>()
                            .Include<StatAttribute, BasicModel.StatAttribute>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.AttributeSystem.ConstValueAttribute, MUnique.OpenMU.AttributeSystem.ConstValueAttribute>()
                            .Include<ConstValueAttribute, BasicModel.ConstValueAttribute>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.AttributeSystem.AttributeRelationship, MUnique.OpenMU.AttributeSystem.AttributeRelationship>()
                            .Include<AttributeRelationship, BasicModel.AttributeRelationship>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.Interfaces.LetterHeader, MUnique.OpenMU.Interfaces.LetterHeader>()
                            .Include<LetterHeader, BasicModel.LetterHeader>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.Interfaces.Friend, MUnique.OpenMU.Interfaces.Friend>()
                            .Include<Friend, BasicModel.Friend>();

            Mapster.TypeAdapterConfig.GlobalSettings.NewConfig<MUnique.OpenMU.PlugIns.PlugInConfiguration, MUnique.OpenMU.PlugIns.PlugInConfiguration>()
                            .Include<PlugInConfiguration, BasicModel.PlugInConfiguration>();

            isConfigured = true;
        }
    }
}
