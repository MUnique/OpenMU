// <copyright file="GameConfiguration.Generated.cs" company="MUnique">
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This source code was auto-generated by a roslyn code generator.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable All

namespace MUnique.OpenMU.Persistence.EntityFramework.Model;

using System.ComponentModel.DataAnnotations.Schema;
using MUnique.OpenMU.Persistence;

/// <summary>
/// The Entity Framework Core implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameConfiguration"/>.
/// </summary>
[Table(nameof(GameConfiguration), Schema = SchemaNames.Configuration)]
internal partial class GameConfiguration : MUnique.OpenMU.DataModel.Configuration.GameConfiguration, IIdentifiable
{
    
    
    /// <summary>
    /// Gets or sets the identifier of this instance.
    /// </summary>
    public Guid Id { get; set; }
    
    /// <summary>
    /// Gets the raw collection of <see cref="JewelMixes" />.
    /// </summary>
    public ICollection<JewelMix> RawJewelMixes { get; } = new EntityFramework.List<JewelMix>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.JewelMix> JewelMixes => base.JewelMixes ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.JewelMix, JewelMix>(this.RawJewelMixes);

    /// <summary>
    /// Gets the raw collection of <see cref="WarpList" />.
    /// </summary>
    public ICollection<WarpInfo> RawWarpList { get; } = new EntityFramework.List<WarpInfo>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.WarpInfo> WarpList => base.WarpList ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.WarpInfo, WarpInfo>(this.RawWarpList);

    /// <summary>
    /// Gets the raw collection of <see cref="DropItemGroups" />.
    /// </summary>
    public ICollection<DropItemGroup> RawDropItemGroups { get; } = new EntityFramework.List<DropItemGroup>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups => base.DropItemGroups ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups);

    /// <summary>
    /// Gets the raw collection of <see cref="Skills" />.
    /// </summary>
    public ICollection<Skill> RawSkills { get; } = new EntityFramework.List<Skill>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Skill> Skills => base.Skills ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Skill, Skill>(this.RawSkills);

    /// <summary>
    /// Gets the raw collection of <see cref="CharacterClasses" />.
    /// </summary>
    public ICollection<CharacterClass> RawCharacterClasses { get; } = new EntityFramework.List<CharacterClass>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> CharacterClasses => base.CharacterClasses ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawCharacterClasses);

    /// <summary>
    /// Gets the raw collection of <see cref="Items" />.
    /// </summary>
    public ICollection<ItemDefinition> RawItems { get; } = new EntityFramework.List<ItemDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition> Items => base.Items ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, ItemDefinition>(this.RawItems);

    /// <summary>
    /// Gets the raw collection of <see cref="ItemSlotTypes" />.
    /// </summary>
    public ICollection<ItemSlotType> RawItemSlotTypes { get; } = new EntityFramework.List<ItemSlotType>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType> ItemSlotTypes => base.ItemSlotTypes ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, ItemSlotType>(this.RawItemSlotTypes);

    /// <summary>
    /// Gets the raw collection of <see cref="ItemOptions" />.
    /// </summary>
    public ICollection<ItemOptionDefinition> RawItemOptions { get; } = new EntityFramework.List<ItemOptionDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition> ItemOptions => base.ItemOptions ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, ItemOptionDefinition>(this.RawItemOptions);

    /// <summary>
    /// Gets the raw collection of <see cref="ItemOptionTypes" />.
    /// </summary>
    public ICollection<ItemOptionType> RawItemOptionTypes { get; } = new EntityFramework.List<ItemOptionType>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType> ItemOptionTypes => base.ItemOptionTypes ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemOptionType>(this.RawItemOptionTypes);

    /// <summary>
    /// Gets the raw collection of <see cref="ItemSetGroups" />.
    /// </summary>
    public ICollection<ItemSetGroup> RawItemSetGroups { get; } = new EntityFramework.List<ItemSetGroup>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup> ItemSetGroups => base.ItemSetGroups ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemSetGroup>(this.RawItemSetGroups);

    /// <summary>
    /// Gets the raw collection of <see cref="ItemOptionCombinationBonuses" />.
    /// </summary>
    public ICollection<ItemOptionCombinationBonus> RawItemOptionCombinationBonuses { get; } = new EntityFramework.List<ItemOptionCombinationBonus>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionCombinationBonus> ItemOptionCombinationBonuses => base.ItemOptionCombinationBonuses ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionCombinationBonus, ItemOptionCombinationBonus>(this.RawItemOptionCombinationBonuses);

    /// <summary>
    /// Gets the raw collection of <see cref="Maps" />.
    /// </summary>
    public ICollection<GameMapDefinition> RawMaps { get; } = new EntityFramework.List<GameMapDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition> Maps => base.Maps ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, GameMapDefinition>(this.RawMaps);

    /// <summary>
    /// Gets the raw collection of <see cref="Monsters" />.
    /// </summary>
    public ICollection<MonsterDefinition> RawMonsters { get; } = new EntityFramework.List<MonsterDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition> Monsters => base.Monsters ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, MonsterDefinition>(this.RawMonsters);

    /// <summary>
    /// Gets the raw collection of <see cref="Attributes" />.
    /// </summary>
    public ICollection<AttributeDefinition> RawAttributes { get; } = new EntityFramework.List<AttributeDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeDefinition> Attributes => base.Attributes ??= new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeDefinition, AttributeDefinition>(this.RawAttributes);

    /// <summary>
    /// Gets the raw collection of <see cref="MagicEffects" />.
    /// </summary>
    public ICollection<MagicEffectDefinition> RawMagicEffects { get; } = new EntityFramework.List<MagicEffectDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition> MagicEffects => base.MagicEffects ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, MagicEffectDefinition>(this.RawMagicEffects);

    /// <summary>
    /// Gets the raw collection of <see cref="MasterSkillRoots" />.
    /// </summary>
    public ICollection<MasterSkillRoot> RawMasterSkillRoots { get; } = new EntityFramework.List<MasterSkillRoot>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot> MasterSkillRoots => base.MasterSkillRoots ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, MasterSkillRoot>(this.RawMasterSkillRoots);

    /// <summary>
    /// Gets the raw collection of <see cref="PlugInConfigurations" />.
    /// </summary>
    public ICollection<PlugInConfiguration> RawPlugInConfigurations { get; } = new EntityFramework.List<PlugInConfiguration>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.PlugIns.PlugInConfiguration> PlugInConfigurations => base.PlugInConfigurations ??= new CollectionAdapter<MUnique.OpenMU.PlugIns.PlugInConfiguration, PlugInConfiguration>(this.RawPlugInConfigurations);

    /// <summary>
    /// Gets the raw collection of <see cref="MiniGameDefinitions" />.
    /// </summary>
    public ICollection<MiniGameDefinition> RawMiniGameDefinitions { get; } = new EntityFramework.List<MiniGameDefinition>();
    
    /// <inheritdoc/>
    [NotMapped]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.MiniGameDefinition> MiniGameDefinitions => base.MiniGameDefinitions ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MiniGameDefinition, MiniGameDefinition>(this.RawMiniGameDefinitions);


    /// <inheritdoc/>
    public override bool Equals(object obj)
    {
        var baseObject = obj as IIdentifiable;
        if (baseObject != null)
        {
            return baseObject.Id == this.Id;
        }

        return base.Equals(obj);
    }

    /// <inheritdoc/>
    public override int GetHashCode()
    {
        return this.Id.GetHashCode();
    }

    
}
