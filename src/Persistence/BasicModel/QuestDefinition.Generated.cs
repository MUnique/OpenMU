// <copyright file="QuestDefinition.Generated.cs" company="MUnique">
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This source code was auto-generated by a roslyn code generator.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable All

namespace MUnique.OpenMU.Persistence.BasicModel;

using MUnique.OpenMU.Persistence.Json;

/// <summary>
/// A plain implementation of <see cref="QuestDefinition"/>.
/// </summary>
public partial class QuestDefinition : MUnique.OpenMU.DataModel.Configuration.Quests.QuestDefinition, IIdentifiable, IConvertibleTo<QuestDefinition>
{
    
    /// <summary>
    /// Gets or sets the identifier of this instance.
    /// </summary>
    public Guid Id { get; set; }
    
    /// <summary>
    /// Gets the raw collection of <see cref="RequiredMonsterKills" />.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("requiredMonsterKills")]
    [System.Text.Json.Serialization.JsonPropertyName("requiredMonsterKills")]
    public ICollection<QuestMonsterKillRequirement> RawRequiredMonsterKills { get; } = new List<QuestMonsterKillRequirement>();
    
    /// <inheritdoc/>
    [Newtonsoft.Json.JsonIgnore]
    [System.Text.Json.Serialization.JsonIgnore]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Quests.QuestMonsterKillRequirement> RequiredMonsterKills
    {
        get => base.RequiredMonsterKills ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Quests.QuestMonsterKillRequirement, QuestMonsterKillRequirement>(this.RawRequiredMonsterKills);
        protected set
        {
            this.RequiredMonsterKills.Clear();
            foreach (var item in value)
            {
                this.RequiredMonsterKills.Add(item);
            }
        }
    }

    /// <summary>
    /// Gets the raw collection of <see cref="RequiredItems" />.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("requiredItems")]
    [System.Text.Json.Serialization.JsonPropertyName("requiredItems")]
    public ICollection<QuestItemRequirement> RawRequiredItems { get; } = new List<QuestItemRequirement>();
    
    /// <inheritdoc/>
    [Newtonsoft.Json.JsonIgnore]
    [System.Text.Json.Serialization.JsonIgnore]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Quests.QuestItemRequirement> RequiredItems
    {
        get => base.RequiredItems ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Quests.QuestItemRequirement, QuestItemRequirement>(this.RawRequiredItems);
        protected set
        {
            this.RequiredItems.Clear();
            foreach (var item in value)
            {
                this.RequiredItems.Add(item);
            }
        }
    }

    /// <summary>
    /// Gets the raw collection of <see cref="Rewards" />.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("rewards")]
    [System.Text.Json.Serialization.JsonPropertyName("rewards")]
    public ICollection<QuestReward> RawRewards { get; } = new List<QuestReward>();
    
    /// <inheritdoc/>
    [Newtonsoft.Json.JsonIgnore]
    [System.Text.Json.Serialization.JsonIgnore]
    public override ICollection<MUnique.OpenMU.DataModel.Configuration.Quests.QuestReward> Rewards
    {
        get => base.Rewards ??= new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Quests.QuestReward, QuestReward>(this.RawRewards);
        protected set
        {
            this.Rewards.Clear();
            foreach (var item in value)
            {
                this.Rewards.Add(item);
            }
        }
    }

    /// <summary>
    /// Gets the raw object of <see cref="QuestGiver" />.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("questGiver")]
    [System.Text.Json.Serialization.JsonPropertyName("questGiver")]
    public MonsterDefinition RawQuestGiver
    {
        get => base.QuestGiver as MonsterDefinition;
        set => base.QuestGiver = value;
    }

    /// <inheritdoc/>
    [Newtonsoft.Json.JsonIgnore]
    [System.Text.Json.Serialization.JsonIgnore]
    public override MUnique.OpenMU.DataModel.Configuration.MonsterDefinition QuestGiver
    {
        get => base.QuestGiver;
        set => base.QuestGiver = value;
    }

    /// <summary>
    /// Gets the raw object of <see cref="QualifiedCharacter" />.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("qualifiedCharacter")]
    [System.Text.Json.Serialization.JsonPropertyName("qualifiedCharacter")]
    public CharacterClass RawQualifiedCharacter
    {
        get => base.QualifiedCharacter as CharacterClass;
        set => base.QualifiedCharacter = value;
    }

    /// <inheritdoc/>
    [Newtonsoft.Json.JsonIgnore]
    [System.Text.Json.Serialization.JsonIgnore]
    public override MUnique.OpenMU.DataModel.Configuration.CharacterClass QualifiedCharacter
    {
        get => base.QualifiedCharacter;
        set => base.QualifiedCharacter = value;
    }


    /// <inheritdoc/>
    public override bool Equals(object obj)
    {
        var baseObject = obj as IIdentifiable;
        if (baseObject != null)
        {
            return baseObject.Id == this.Id;
        }

        return base.Equals(obj);
    }

    /// <inheritdoc/>
    public override int GetHashCode()
    {
        return this.Id.GetHashCode();
    }

    /// <inheritdoc/>
    public QuestDefinition Convert() => this;
}
