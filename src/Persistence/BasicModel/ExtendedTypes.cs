// <copyright file="ExtendedTypes.cs" company="MUnique">
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
// </copyright>

//------------------------------------------------------------------------------
// <auto-generated>
//     This source code was auto-generated by a T4 template.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable All

namespace MUnique.OpenMU.Persistence.BasicModel
{
    using System;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using MUnique.OpenMU.Persistence.Json;

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Account"/>.
    /// </summary>
    public partial class Account : MUnique.OpenMU.DataModel.Entities.Account, IIdentifiable, IConvertibleTo<Account>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="UnlockedCharacterClasses" />.
        /// </summary>
        [JsonProperty("UnlockedCharacterClasses")]
        public ICollection<CharacterClass> RawUnlockedCharacterClasses { get; } = new List<CharacterClass>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> UnlockedCharacterClasses
        {
            get
            {
                return base.UnlockedCharacterClasses ?? (base.UnlockedCharacterClasses = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawUnlockedCharacterClasses)); 
            }
            protected set
            {
                this.UnlockedCharacterClasses.Clear();
                foreach (var item in value)
                {
                    this.UnlockedCharacterClasses.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Characters" />.
        /// </summary>
        [JsonProperty("Characters")]
        public ICollection<Character> RawCharacters { get; } = new List<Character>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.Character> Characters
        {
            get
            {
                return base.Characters ?? (base.Characters = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.Character, Character>(this.RawCharacters)); 
            }
            protected set
            {
                this.Characters.Clear();
                foreach (var item in value)
                {
                    this.Characters.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Vault" />.
        /// </summary>
        [JsonProperty("Vault")]
        public ItemStorage RawVault
        { 
            get { return base.Vault as ItemStorage; }
            set { base.Vault = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage Vault
        {
            get
            {
                return base.Vault;
            }
            
            set
            {
                base.Vault = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Account Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.AppearanceData"/>.
    /// </summary>
    public partial class AppearanceData : MUnique.OpenMU.DataModel.Entities.AppearanceData, IIdentifiable, IConvertibleTo<AppearanceData>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="EquippedItems" />.
        /// </summary>
        [JsonProperty("EquippedItems")]
        public ICollection<ItemAppearance> RawEquippedItems { get; } = new List<ItemAppearance>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.ItemAppearance> EquippedItems
        {
            get
            {
                return base.EquippedItems ?? (base.EquippedItems = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.ItemAppearance, ItemAppearance>(this.RawEquippedItems)); 
            }
            protected set
            {
                this.EquippedItems.Clear();
                foreach (var item in value)
                {
                    this.EquippedItems.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="CharacterClass" />.
        /// </summary>
        [JsonProperty("CharacterClass")]
        public CharacterClass RawCharacterClass
        { 
            get { return base.CharacterClass as CharacterClass; }
            set { base.CharacterClass = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass CharacterClass
        {
            get
            {
                return base.CharacterClass;
            }
            
            set
            {
                base.CharacterClass = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public AppearanceData Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Character"/>.
    /// </summary>
    public partial class Character : MUnique.OpenMU.DataModel.Entities.Character, IIdentifiable, IConvertibleTo<Character>
    {
        /// <summary>
        /// Gets the raw collection of <see cref="Attributes" />.
        /// </summary>
        [JsonProperty("Attributes")]
        public ICollection<StatAttribute> RawAttributes { get; } = new List<StatAttribute>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.AttributeSystem.StatAttribute> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.StatAttribute, StatAttribute>(this.RawAttributes)); 
            }
            protected set
            {
                this.Attributes.Clear();
                foreach (var item in value)
                {
                    this.Attributes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Letters" />.
        /// </summary>
        [JsonProperty("Letters")]
        public IList<LetterHeader> RawLetters { get; } = new List<LetterHeader>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override IList<MUnique.OpenMU.Interfaces.LetterHeader> Letters
        {
            get
            {
                return base.Letters ?? (base.Letters = new ListAdapter<MUnique.OpenMU.Interfaces.LetterHeader, LetterHeader>(this.RawLetters)); 
            }
            protected set
            {
                this.Letters.Clear();
                foreach (var item in value)
                {
                    this.Letters.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="LearnedSkills" />.
        /// </summary>
        [JsonProperty("LearnedSkills")]
        public ICollection<SkillEntry> RawLearnedSkills { get; } = new List<SkillEntry>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.SkillEntry> LearnedSkills
        {
            get
            {
                return base.LearnedSkills ?? (base.LearnedSkills = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.SkillEntry, SkillEntry>(this.RawLearnedSkills)); 
            }
            protected set
            {
                this.LearnedSkills.Clear();
                foreach (var item in value)
                {
                    this.LearnedSkills.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="DropItemGroups" />.
        /// </summary>
        [JsonProperty("DropItemGroups")]
        public ICollection<DropItemGroup> RawDropItemGroups { get; } = new List<DropItemGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups
        {
            get
            {
                return base.DropItemGroups ?? (base.DropItemGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups)); 
            }
            protected set
            {
                this.DropItemGroups.Clear();
                foreach (var item in value)
                {
                    this.DropItemGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="CharacterClass" />.
        /// </summary>
        [JsonProperty("CharacterClass")]
        public CharacterClass RawCharacterClass
        { 
            get { return base.CharacterClass as CharacterClass; }
            set { base.CharacterClass = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass CharacterClass
        {
            get
            {
                return base.CharacterClass;
            }
            
            set
            {
                base.CharacterClass = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="CurrentMap" />.
        /// </summary>
        [JsonProperty("CurrentMap")]
        public GameMapDefinition RawCurrentMap
        { 
            get { return base.CurrentMap as GameMapDefinition; }
            set { base.CurrentMap = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition CurrentMap
        {
            get
            {
                return base.CurrentMap;
            }
            
            set
            {
                base.CurrentMap = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Inventory" />.
        /// </summary>
        [JsonProperty("Inventory")]
        public ItemStorage RawInventory
        { 
            get { return base.Inventory as ItemStorage; }
            set { base.Inventory = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage Inventory
        {
            get
            {
                return base.Inventory;
            }
            
            set
            {
                base.Inventory = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Character Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Guild"/>.
    /// </summary>
    public partial class Guild : MUnique.OpenMU.DataModel.Entities.Guild, IIdentifiable, IConvertibleTo<Guild>
    {
        /// <summary>
        /// Gets the raw collection of <see cref="Members" />.
        /// </summary>
        [JsonProperty("Members")]
        public ICollection<GuildMember> RawMembers { get; } = new List<GuildMember>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.GuildMember> Members
        {
            get
            {
                return base.Members ?? (base.Members = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.GuildMember, GuildMember>(this.RawMembers)); 
            }
            protected set
            {
                this.Members.Clear();
                foreach (var item in value)
                {
                    this.Members.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Hostility" />.
        /// </summary>
        [JsonProperty("Hostility")]
        public Guild RawHostility
        { 
            get { return base.Hostility as Guild; }
            set { base.Hostility = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.Interfaces.Guild Hostility
        {
            get
            {
                return base.Hostility;
            }
            
            set
            {
                base.Hostility = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="AllianceGuild" />.
        /// </summary>
        [JsonProperty("AllianceGuild")]
        public Guild RawAllianceGuild
        { 
            get { return base.AllianceGuild as Guild; }
            set { base.AllianceGuild = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.Interfaces.Guild AllianceGuild
        {
            get
            {
                return base.AllianceGuild;
            }
            
            set
            {
                base.AllianceGuild = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Guild Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.GuildMember"/>.
    /// </summary>
    public partial class GuildMember : MUnique.OpenMU.DataModel.Entities.GuildMember, IIdentifiable, IConvertibleTo<GuildMember>
    {
        /// <inheritdoc />
        public GuildMember()
        {
        } 

        /// <inheritdoc />
        public GuildMember(System.Guid id)
          : base (id)
        {
        }        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GuildMember Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.Item"/>.
    /// </summary>
    public partial class Item : MUnique.OpenMU.DataModel.Entities.Item, IIdentifiable, IConvertibleTo<Item>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemOptions" />.
        /// </summary>
        [JsonProperty("ItemOptions")]
        public ICollection<ItemOptionLink> RawItemOptions { get; } = new List<ItemOptionLink>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.ItemOptionLink> ItemOptions
        {
            get
            {
                return base.ItemOptions ?? (base.ItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.ItemOptionLink, ItemOptionLink>(this.RawItemOptions)); 
            }
            protected set
            {
                this.ItemOptions.Clear();
                foreach (var item in value)
                {
                    this.ItemOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemSetGroups" />.
        /// </summary>
        [JsonProperty("ItemSetGroups")]
        public ICollection<ItemSetGroup> RawItemSetGroups { get; } = new List<ItemSetGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup> ItemSetGroups
        {
            get
            {
                return base.ItemSetGroups ?? (base.ItemSetGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemSetGroup>(this.RawItemSetGroups)); 
            }
            protected set
            {
                this.ItemSetGroups.Clear();
                foreach (var item in value)
                {
                    this.ItemSetGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Definition" />.
        /// </summary>
        [JsonProperty("Definition")]
        public ItemDefinition RawDefinition
        { 
            get { return base.Definition as ItemDefinition; }
            set { base.Definition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            set
            {
                base.Definition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Item Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemAppearance"/>.
    /// </summary>
    public partial class ItemAppearance : MUnique.OpenMU.DataModel.Entities.ItemAppearance, IIdentifiable, IConvertibleTo<ItemAppearance>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="VisibleOptions" />.
        /// </summary>
        [JsonProperty("VisibleOptions")]
        public ICollection<ItemOptionType> RawVisibleOptions { get; } = new List<ItemOptionType>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType> VisibleOptions
        {
            get
            {
                return base.VisibleOptions ?? (base.VisibleOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemOptionType>(this.RawVisibleOptions)); 
            }
            protected set
            {
                this.VisibleOptions.Clear();
                foreach (var item in value)
                {
                    this.VisibleOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Definition" />.
        /// </summary>
        [JsonProperty("Definition")]
        public ItemDefinition RawDefinition
        { 
            get { return base.Definition as ItemDefinition; }
            set { base.Definition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            set
            {
                base.Definition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemAppearance Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemOptionLink"/>.
    /// </summary>
    public partial class ItemOptionLink : MUnique.OpenMU.DataModel.Entities.ItemOptionLink, IIdentifiable, IConvertibleTo<ItemOptionLink>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="ItemOption" />.
        /// </summary>
        [JsonProperty("ItemOption")]
        public IncreasableItemOption RawItemOption
        { 
            get { return base.ItemOption as IncreasableItemOption; }
            set { base.ItemOption = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption ItemOption
        {
            get
            {
                return base.ItemOption;
            }
            
            set
            {
                base.ItemOption = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOptionLink Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.ItemStorage"/>.
    /// </summary>
    public partial class ItemStorage : MUnique.OpenMU.DataModel.Entities.ItemStorage, IIdentifiable, IConvertibleTo<ItemStorage>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Items" />.
        /// </summary>
        [JsonProperty("Items")]
        public ICollection<Item> RawItems { get; } = new List<Item>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Entities.Item> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Entities.Item, Item>(this.RawItems)); 
            }
            protected set
            {
                this.Items.Clear();
                foreach (var item in value)
                {
                    this.Items.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemStorage Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.LetterBody"/>.
    /// </summary>
    public partial class LetterBody : MUnique.OpenMU.DataModel.Entities.LetterBody, IIdentifiable, IConvertibleTo<LetterBody>
    {
        /// <summary>
        /// Gets the raw object of <see cref="Header" />.
        /// </summary>
        [JsonProperty("Header")]
        public LetterHeader RawHeader
        { 
            get { return base.Header as LetterHeader; }
            set { base.Header = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.Interfaces.LetterHeader Header
        {
            get
            {
                return base.Header;
            }
            
            set
            {
                base.Header = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="SenderAppearance" />.
        /// </summary>
        [JsonProperty("SenderAppearance")]
        public AppearanceData RawSenderAppearance
        { 
            get { return base.SenderAppearance as AppearanceData; }
            set { base.SenderAppearance = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Entities.AppearanceData SenderAppearance
        {
            get
            {
                return base.SenderAppearance;
            }
            
            set
            {
                base.SenderAppearance = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public LetterBody Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Entities.SkillEntry"/>.
    /// </summary>
    public partial class SkillEntry : MUnique.OpenMU.DataModel.Entities.SkillEntry, IIdentifiable, IConvertibleTo<SkillEntry>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Skill" />.
        /// </summary>
        [JsonProperty("Skill")]
        public Skill RawSkill
        { 
            get { return base.Skill as Skill; }
            set { base.Skill = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Skill Skill
        {
            get
            {
                return base.Skill;
            }
            
            set
            {
                base.Skill = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public SkillEntry Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.CharacterClass"/>.
    /// </summary>
    public partial class CharacterClass : MUnique.OpenMU.DataModel.Configuration.CharacterClass, IIdentifiable, IConvertibleTo<CharacterClass>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="StatAttributes" />.
        /// </summary>
        [JsonProperty("StatAttributes")]
        public ICollection<StatAttributeDefinition> RawStatAttributes { get; } = new List<StatAttributeDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition> StatAttributes
        {
            get
            {
                return base.StatAttributes ?? (base.StatAttributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition, StatAttributeDefinition>(this.RawStatAttributes)); 
            }
            protected set
            {
                this.StatAttributes.Clear();
                foreach (var item in value)
                {
                    this.StatAttributes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="AttributeCombinations" />.
        /// </summary>
        [JsonProperty("AttributeCombinations")]
        public ICollection<AttributeRelationship> RawAttributeCombinations { get; } = new List<AttributeRelationship>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeRelationship> AttributeCombinations
        {
            get
            {
                return base.AttributeCombinations ?? (base.AttributeCombinations = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeRelationship, AttributeRelationship>(this.RawAttributeCombinations)); 
            }
            protected set
            {
                this.AttributeCombinations.Clear();
                foreach (var item in value)
                {
                    this.AttributeCombinations.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="BaseAttributeValues" />.
        /// </summary>
        [JsonProperty("BaseAttributeValues")]
        public ICollection<ConstValueAttribute> RawBaseAttributeValues { get; } = new List<ConstValueAttribute>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.AttributeSystem.ConstValueAttribute> BaseAttributeValues
        {
            get
            {
                return base.BaseAttributeValues ?? (base.BaseAttributeValues = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.ConstValueAttribute, ConstValueAttribute>(this.RawBaseAttributeValues)); 
            }
            protected set
            {
                this.BaseAttributeValues.Clear();
                foreach (var item in value)
                {
                    this.BaseAttributeValues.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="NextGenerationClass" />.
        /// </summary>
        [JsonProperty("NextGenerationClass")]
        public CharacterClass RawNextGenerationClass
        { 
            get { return base.NextGenerationClass as CharacterClass; }
            set { base.NextGenerationClass = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.CharacterClass NextGenerationClass
        {
            get
            {
                return base.NextGenerationClass;
            }
            
            set
            {
                base.NextGenerationClass = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="HomeMap" />.
        /// </summary>
        [JsonProperty("HomeMap")]
        public GameMapDefinition RawHomeMap
        { 
            get { return base.HomeMap as GameMapDefinition; }
            set { base.HomeMap = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition HomeMap
        {
            get
            {
                return base.HomeMap;
            }
            
            set
            {
                base.HomeMap = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public CharacterClass Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition"/>.
    /// </summary>
    public partial class ChatServerDefinition : MUnique.OpenMU.DataModel.Configuration.ChatServerDefinition, IIdentifiable, IConvertibleTo<ChatServerDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Endpoints" />.
        /// </summary>
        [JsonProperty("Endpoints")]
        public ICollection<ChatServerEndpoint> RawEndpoints { get; } = new List<ChatServerEndpoint>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint> Endpoints
        {
            get
            {
                return base.Endpoints ?? (base.Endpoints = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint, ChatServerEndpoint>(this.RawEndpoints)); 
            }
            protected set
            {
                this.Endpoints.Clear();
                foreach (var item in value)
                {
                    this.Endpoints.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ChatServerDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint"/>.
    /// </summary>
    public partial class ChatServerEndpoint : MUnique.OpenMU.DataModel.Configuration.ChatServerEndpoint, IIdentifiable, IConvertibleTo<ChatServerEndpoint>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Client" />.
        /// </summary>
        [JsonProperty("Client")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ChatServerEndpoint Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition"/>.
    /// </summary>
    public partial class ConnectServerDefinition : MUnique.OpenMU.DataModel.Configuration.ConnectServerDefinition, IIdentifiable, IConvertibleTo<ConnectServerDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Client" />.
        /// </summary>
        [JsonProperty("Client")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ConnectServerDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.DropItemGroup"/>.
    /// </summary>
    public partial class DropItemGroup : MUnique.OpenMU.DataModel.Configuration.DropItemGroup, IIdentifiable, IConvertibleTo<DropItemGroup>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="PossibleItems" />.
        /// </summary>
        [JsonProperty("PossibleItems")]
        public ICollection<ItemDefinition> RawPossibleItems { get; } = new List<ItemDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition> PossibleItems
        {
            get
            {
                return base.PossibleItems ?? (base.PossibleItems = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, ItemDefinition>(this.RawPossibleItems)); 
            }
            protected set
            {
                this.PossibleItems.Clear();
                foreach (var item in value)
                {
                    this.PossibleItems.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public DropItemGroup Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.EnterGate"/>.
    /// </summary>
    public partial class EnterGate : MUnique.OpenMU.DataModel.Configuration.EnterGate, IIdentifiable, IConvertibleTo<EnterGate>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="TargetGate" />.
        /// </summary>
        [JsonProperty("TargetGate")]
        public ExitGate RawTargetGate
        { 
            get { return base.TargetGate as ExitGate; }
            set { base.TargetGate = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.ExitGate TargetGate
        {
            get
            {
                return base.TargetGate;
            }
            
            set
            {
                base.TargetGate = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public EnterGate Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ExitGate"/>.
    /// </summary>
    public partial class ExitGate : MUnique.OpenMU.DataModel.Configuration.ExitGate, IIdentifiable, IConvertibleTo<ExitGate>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Map" />.
        /// </summary>
        [JsonProperty("Map")]
        public GameMapDefinition RawMap
        { 
            get { return base.Map as GameMapDefinition; }
            set { base.Map = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition Map
        {
            get
            {
                return base.Map;
            }
            
            set
            {
                base.Map = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ExitGate Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameClientDefinition"/>.
    /// </summary>
    public partial class GameClientDefinition : MUnique.OpenMU.DataModel.Configuration.GameClientDefinition, IIdentifiable, IConvertibleTo<GameClientDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameClientDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameConfiguration"/>.
    /// </summary>
    public partial class GameConfiguration : MUnique.OpenMU.DataModel.Configuration.GameConfiguration, IIdentifiable, IConvertibleTo<GameConfiguration>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="JewelMixes" />.
        /// </summary>
        [JsonProperty("JewelMixes")]
        public ICollection<JewelMix> RawJewelMixes { get; } = new List<JewelMix>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.JewelMix> JewelMixes
        {
            get
            {
                return base.JewelMixes ?? (base.JewelMixes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.JewelMix, JewelMix>(this.RawJewelMixes)); 
            }
            protected set
            {
                this.JewelMixes.Clear();
                foreach (var item in value)
                {
                    this.JewelMixes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="WarpList" />.
        /// </summary>
        [JsonProperty("WarpList")]
        public ICollection<WarpInfo> RawWarpList { get; } = new List<WarpInfo>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.WarpInfo> WarpList
        {
            get
            {
                return base.WarpList ?? (base.WarpList = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.WarpInfo, WarpInfo>(this.RawWarpList)); 
            }
            protected set
            {
                this.WarpList.Clear();
                foreach (var item in value)
                {
                    this.WarpList.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="DropItemGroups" />.
        /// </summary>
        [JsonProperty("DropItemGroups")]
        public ICollection<DropItemGroup> RawDropItemGroups { get; } = new List<DropItemGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups
        {
            get
            {
                return base.DropItemGroups ?? (base.DropItemGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups)); 
            }
            protected set
            {
                this.DropItemGroups.Clear();
                foreach (var item in value)
                {
                    this.DropItemGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Skills" />.
        /// </summary>
        [JsonProperty("Skills")]
        public ICollection<Skill> RawSkills { get; } = new List<Skill>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Skill> Skills
        {
            get
            {
                return base.Skills ?? (base.Skills = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Skill, Skill>(this.RawSkills)); 
            }
            protected set
            {
                this.Skills.Clear();
                foreach (var item in value)
                {
                    this.Skills.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="CharacterClasses" />.
        /// </summary>
        [JsonProperty("CharacterClasses")]
        public ICollection<CharacterClass> RawCharacterClasses { get; } = new List<CharacterClass>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> CharacterClasses
        {
            get
            {
                return base.CharacterClasses ?? (base.CharacterClasses = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawCharacterClasses)); 
            }
            protected set
            {
                this.CharacterClasses.Clear();
                foreach (var item in value)
                {
                    this.CharacterClasses.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Items" />.
        /// </summary>
        [JsonProperty("Items")]
        public ICollection<ItemDefinition> RawItems { get; } = new List<ItemDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, ItemDefinition>(this.RawItems)); 
            }
            protected set
            {
                this.Items.Clear();
                foreach (var item in value)
                {
                    this.Items.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemSlotTypes" />.
        /// </summary>
        [JsonProperty("ItemSlotTypes")]
        public ICollection<ItemSlotType> RawItemSlotTypes { get; } = new List<ItemSlotType>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType> ItemSlotTypes
        {
            get
            {
                return base.ItemSlotTypes ?? (base.ItemSlotTypes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, ItemSlotType>(this.RawItemSlotTypes)); 
            }
            protected set
            {
                this.ItemSlotTypes.Clear();
                foreach (var item in value)
                {
                    this.ItemSlotTypes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemOptions" />.
        /// </summary>
        [JsonProperty("ItemOptions")]
        public ICollection<ItemOptionDefinition> RawItemOptions { get; } = new List<ItemOptionDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition> ItemOptions
        {
            get
            {
                return base.ItemOptions ?? (base.ItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, ItemOptionDefinition>(this.RawItemOptions)); 
            }
            protected set
            {
                this.ItemOptions.Clear();
                foreach (var item in value)
                {
                    this.ItemOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemOptionTypes" />.
        /// </summary>
        [JsonProperty("ItemOptionTypes")]
        public ICollection<ItemOptionType> RawItemOptionTypes { get; } = new List<ItemOptionType>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType> ItemOptionTypes
        {
            get
            {
                return base.ItemOptionTypes ?? (base.ItemOptionTypes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemOptionType>(this.RawItemOptionTypes)); 
            }
            protected set
            {
                this.ItemOptionTypes.Clear();
                foreach (var item in value)
                {
                    this.ItemOptionTypes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemSetGroups" />.
        /// </summary>
        [JsonProperty("ItemSetGroups")]
        public ICollection<ItemSetGroup> RawItemSetGroups { get; } = new List<ItemSetGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup> ItemSetGroups
        {
            get
            {
                return base.ItemSetGroups ?? (base.ItemSetGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemSetGroup>(this.RawItemSetGroups)); 
            }
            protected set
            {
                this.ItemSetGroups.Clear();
                foreach (var item in value)
                {
                    this.ItemSetGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Maps" />.
        /// </summary>
        [JsonProperty("Maps")]
        public ICollection<GameMapDefinition> RawMaps { get; } = new List<GameMapDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition> Maps
        {
            get
            {
                return base.Maps ?? (base.Maps = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, GameMapDefinition>(this.RawMaps)); 
            }
            protected set
            {
                this.Maps.Clear();
                foreach (var item in value)
                {
                    this.Maps.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Monsters" />.
        /// </summary>
        [JsonProperty("Monsters")]
        public ICollection<MonsterDefinition> RawMonsters { get; } = new List<MonsterDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition> Monsters
        {
            get
            {
                return base.Monsters ?? (base.Monsters = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, MonsterDefinition>(this.RawMonsters)); 
            }
            protected set
            {
                this.Monsters.Clear();
                foreach (var item in value)
                {
                    this.Monsters.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Attributes" />.
        /// </summary>
        [JsonProperty("Attributes")]
        public ICollection<AttributeDefinition> RawAttributes { get; } = new List<AttributeDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeDefinition> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeDefinition, AttributeDefinition>(this.RawAttributes)); 
            }
            protected set
            {
                this.Attributes.Clear();
                foreach (var item in value)
                {
                    this.Attributes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="MagicEffects" />.
        /// </summary>
        [JsonProperty("MagicEffects")]
        public ICollection<MagicEffectDefinition> RawMagicEffects { get; } = new List<MagicEffectDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition> MagicEffects
        {
            get
            {
                return base.MagicEffects ?? (base.MagicEffects = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, MagicEffectDefinition>(this.RawMagicEffects)); 
            }
            protected set
            {
                this.MagicEffects.Clear();
                foreach (var item in value)
                {
                    this.MagicEffects.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="MasterSkillRoots" />.
        /// </summary>
        [JsonProperty("MasterSkillRoots")]
        public ICollection<MasterSkillRoot> RawMasterSkillRoots { get; } = new List<MasterSkillRoot>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot> MasterSkillRoots
        {
            get
            {
                return base.MasterSkillRoots ?? (base.MasterSkillRoots = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, MasterSkillRoot>(this.RawMasterSkillRoots)); 
            }
            protected set
            {
                this.MasterSkillRoots.Clear();
                foreach (var item in value)
                {
                    this.MasterSkillRoots.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="PlugInConfigurations" />.
        /// </summary>
        [JsonProperty("PlugInConfigurations")]
        public ICollection<PlugInConfiguration> RawPlugInConfigurations { get; } = new List<PlugInConfiguration>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.PlugIns.PlugInConfiguration> PlugInConfigurations
        {
            get
            {
                return base.PlugInConfigurations ?? (base.PlugInConfigurations = new CollectionAdapter<MUnique.OpenMU.PlugIns.PlugInConfiguration, PlugInConfiguration>(this.RawPlugInConfigurations)); 
            }
            protected set
            {
                this.PlugInConfigurations.Clear();
                foreach (var item in value)
                {
                    this.PlugInConfigurations.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameConfiguration Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameMapDefinition"/>.
    /// </summary>
    public partial class GameMapDefinition : MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, IIdentifiable, IConvertibleTo<GameMapDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="MonsterSpawns" />.
        /// </summary>
        [JsonProperty("MonsterSpawns")]
        public ICollection<MonsterSpawnArea> RawMonsterSpawns { get; } = new List<MonsterSpawnArea>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea> MonsterSpawns
        {
            get
            {
                return base.MonsterSpawns ?? (base.MonsterSpawns = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea, MonsterSpawnArea>(this.RawMonsterSpawns)); 
            }
            protected set
            {
                this.MonsterSpawns.Clear();
                foreach (var item in value)
                {
                    this.MonsterSpawns.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="EnterGates" />.
        /// </summary>
        [JsonProperty("EnterGates")]
        public ICollection<EnterGate> RawEnterGates { get; } = new List<EnterGate>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.EnterGate> EnterGates
        {
            get
            {
                return base.EnterGates ?? (base.EnterGates = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.EnterGate, EnterGate>(this.RawEnterGates)); 
            }
            protected set
            {
                this.EnterGates.Clear();
                foreach (var item in value)
                {
                    this.EnterGates.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ExitGates" />.
        /// </summary>
        [JsonProperty("ExitGates")]
        public ICollection<ExitGate> RawExitGates { get; } = new List<ExitGate>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ExitGate> ExitGates
        {
            get
            {
                return base.ExitGates ?? (base.ExitGates = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ExitGate, ExitGate>(this.RawExitGates)); 
            }
            protected set
            {
                this.ExitGates.Clear();
                foreach (var item in value)
                {
                    this.ExitGates.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="DropItemGroups" />.
        /// </summary>
        [JsonProperty("DropItemGroups")]
        public ICollection<DropItemGroup> RawDropItemGroups { get; } = new List<DropItemGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups
        {
            get
            {
                return base.DropItemGroups ?? (base.DropItemGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups)); 
            }
            protected set
            {
                this.DropItemGroups.Clear();
                foreach (var item in value)
                {
                    this.DropItemGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="MapRequirements" />.
        /// </summary>
        [JsonProperty("MapRequirements")]
        public ICollection<AttributeRequirement> RawMapRequirements { get; } = new List<AttributeRequirement>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> MapRequirements
        {
            get
            {
                return base.MapRequirements ?? (base.MapRequirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawMapRequirements)); 
            }
            protected set
            {
                this.MapRequirements.Clear();
                foreach (var item in value)
                {
                    this.MapRequirements.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="SafezoneMap" />.
        /// </summary>
        [JsonProperty("SafezoneMap")]
        public GameMapDefinition RawSafezoneMap
        { 
            get { return base.SafezoneMap as GameMapDefinition; }
            set { base.SafezoneMap = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition SafezoneMap
        {
            get
            {
                return base.SafezoneMap;
            }
            
            set
            {
                base.SafezoneMap = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameMapDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration"/>.
    /// </summary>
    public partial class GameServerConfiguration : MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration, IIdentifiable, IConvertibleTo<GameServerConfiguration>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Maps" />.
        /// </summary>
        [JsonProperty("Maps")]
        public ICollection<GameMapDefinition> RawMaps { get; } = new List<GameMapDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition> Maps
        {
            get
            {
                return base.Maps ?? (base.Maps = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameMapDefinition, GameMapDefinition>(this.RawMaps)); 
            }
            protected set
            {
                this.Maps.Clear();
                foreach (var item in value)
                {
                    this.Maps.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameServerConfiguration Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerDefinition"/>.
    /// </summary>
    public partial class GameServerDefinition : MUnique.OpenMU.DataModel.Configuration.GameServerDefinition, IIdentifiable, IConvertibleTo<GameServerDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Endpoints" />.
        /// </summary>
        [JsonProperty("Endpoints")]
        public ICollection<GameServerEndpoint> RawEndpoints { get; } = new List<GameServerEndpoint>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint> Endpoints
        {
            get
            {
                return base.Endpoints ?? (base.Endpoints = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint, GameServerEndpoint>(this.RawEndpoints)); 
            }
            protected set
            {
                this.Endpoints.Clear();
                foreach (var item in value)
                {
                    this.Endpoints.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="ServerConfiguration" />.
        /// </summary>
        [JsonProperty("ServerConfiguration")]
        public GameServerConfiguration RawServerConfiguration
        { 
            get { return base.ServerConfiguration as GameServerConfiguration; }
            set { base.ServerConfiguration = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameServerConfiguration ServerConfiguration
        {
            get
            {
                return base.ServerConfiguration;
            }
            
            set
            {
                base.ServerConfiguration = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="GameConfiguration" />.
        /// </summary>
        [JsonProperty("GameConfiguration")]
        public GameConfiguration RawGameConfiguration
        { 
            get { return base.GameConfiguration as GameConfiguration; }
            set { base.GameConfiguration = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameConfiguration GameConfiguration
        {
            get
            {
                return base.GameConfiguration;
            }
            
            set
            {
                base.GameConfiguration = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameServerDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint"/>.
    /// </summary>
    public partial class GameServerEndpoint : MUnique.OpenMU.DataModel.Configuration.GameServerEndpoint, IIdentifiable, IConvertibleTo<GameServerEndpoint>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Client" />.
        /// </summary>
        [JsonProperty("Client")]
        public GameClientDefinition RawClient
        { 
            get { return base.Client as GameClientDefinition; }
            set { base.Client = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameClientDefinition Client
        {
            get
            {
                return base.Client;
            }
            
            set
            {
                base.Client = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public GameServerEndpoint Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Gate"/>.
    /// </summary>
    public partial class Gate : MUnique.OpenMU.DataModel.Configuration.Gate, IIdentifiable, IConvertibleTo<Gate>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Gate Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.JewelMix"/>.
    /// </summary>
    public partial class JewelMix : MUnique.OpenMU.DataModel.Configuration.JewelMix, IIdentifiable, IConvertibleTo<JewelMix>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="SingleJewel" />.
        /// </summary>
        [JsonProperty("SingleJewel")]
        public ItemDefinition RawSingleJewel
        { 
            get { return base.SingleJewel as ItemDefinition; }
            set { base.SingleJewel = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition SingleJewel
        {
            get
            {
                return base.SingleJewel;
            }
            
            set
            {
                base.SingleJewel = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="MixedJewel" />.
        /// </summary>
        [JsonProperty("MixedJewel")]
        public ItemDefinition RawMixedJewel
        { 
            get { return base.MixedJewel as ItemDefinition; }
            set { base.MixedJewel = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition MixedJewel
        {
            get
            {
                return base.MixedJewel;
            }
            
            set
            {
                base.MixedJewel = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public JewelMix Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage"/>.
    /// </summary>
    public partial class LevelDependentDamage : MUnique.OpenMU.DataModel.Configuration.LevelDependentDamage, IIdentifiable, IConvertibleTo<LevelDependentDamage>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public LevelDependentDamage Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition"/>.
    /// </summary>
    public partial class MagicEffectDefinition : MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition, IIdentifiable, IConvertibleTo<MagicEffectDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="PowerUpDefinition" />.
        /// </summary>
        [JsonProperty("PowerUpDefinition")]
        public PowerUpDefinitionWithDuration RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinitionWithDuration; }
            set { base.PowerUpDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MagicEffectDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition"/>.
    /// </summary>
    public partial class MasterSkillDefinition : MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition, IIdentifiable, IConvertibleTo<MasterSkillDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="RequiredMasterSkills" />.
        /// </summary>
        [JsonProperty("RequiredMasterSkills")]
        public ICollection<Skill> RawRequiredMasterSkills { get; } = new List<Skill>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Skill> RequiredMasterSkills
        {
            get
            {
                return base.RequiredMasterSkills ?? (base.RequiredMasterSkills = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Skill, Skill>(this.RawRequiredMasterSkills)); 
            }
            protected set
            {
                this.RequiredMasterSkills.Clear();
                foreach (var item in value)
                {
                    this.RequiredMasterSkills.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Root" />.
        /// </summary>
        [JsonProperty("Root")]
        public MasterSkillRoot RawRoot
        { 
            get { return base.Root as MasterSkillRoot; }
            set { base.Root = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot Root
        {
            get
            {
                return base.Root;
            }
            
            set
            {
                base.Root = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="TargetAttribute" />.
        /// </summary>
        [JsonProperty("TargetAttribute")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="ReplacedSkill" />.
        /// </summary>
        [JsonProperty("ReplacedSkill")]
        public Skill RawReplacedSkill
        { 
            get { return base.ReplacedSkill as Skill; }
            set { base.ReplacedSkill = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Skill ReplacedSkill
        {
            get
            {
                return base.ReplacedSkill;
            }
            
            set
            {
                base.ReplacedSkill = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MasterSkillDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot"/>.
    /// </summary>
    public partial class MasterSkillRoot : MUnique.OpenMU.DataModel.Configuration.MasterSkillRoot, IIdentifiable, IConvertibleTo<MasterSkillRoot>
    {        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MasterSkillRoot Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterAttribute"/>.
    /// </summary>
    public partial class MonsterAttribute : MUnique.OpenMU.DataModel.Configuration.MonsterAttribute, IIdentifiable, IConvertibleTo<MonsterAttribute>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="AttributeDefinition" />.
        /// </summary>
        [JsonProperty("AttributeDefinition")]
        public AttributeDefinition RawAttributeDefinition
        { 
            get { return base.AttributeDefinition as AttributeDefinition; }
            set { base.AttributeDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition AttributeDefinition
        {
            get
            {
                return base.AttributeDefinition;
            }
            
            set
            {
                base.AttributeDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MonsterAttribute Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterDefinition"/>.
    /// </summary>
    public partial class MonsterDefinition : MUnique.OpenMU.DataModel.Configuration.MonsterDefinition, IIdentifiable, IConvertibleTo<MonsterDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="ItemCraftings" />.
        /// </summary>
        [JsonProperty("ItemCraftings")]
        public ICollection<ItemCrafting> RawItemCraftings { get; } = new List<ItemCrafting>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting> ItemCraftings
        {
            get
            {
                return base.ItemCraftings ?? (base.ItemCraftings = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting, ItemCrafting>(this.RawItemCraftings)); 
            }
            protected set
            {
                this.ItemCraftings.Clear();
                foreach (var item in value)
                {
                    this.ItemCraftings.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="DropItemGroups" />.
        /// </summary>
        [JsonProperty("DropItemGroups")]
        public ICollection<DropItemGroup> RawDropItemGroups { get; } = new List<DropItemGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.DropItemGroup> DropItemGroups
        {
            get
            {
                return base.DropItemGroups ?? (base.DropItemGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.DropItemGroup, DropItemGroup>(this.RawDropItemGroups)); 
            }
            protected set
            {
                this.DropItemGroups.Clear();
                foreach (var item in value)
                {
                    this.DropItemGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Attributes" />.
        /// </summary>
        [JsonProperty("Attributes")]
        public ICollection<MonsterAttribute> RawAttributes { get; } = new List<MonsterAttribute>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute> Attributes
        {
            get
            {
                return base.Attributes ?? (base.Attributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.MonsterAttribute, MonsterAttribute>(this.RawAttributes)); 
            }
            protected set
            {
                this.Attributes.Clear();
                foreach (var item in value)
                {
                    this.Attributes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="AttackSkill" />.
        /// </summary>
        [JsonProperty("AttackSkill")]
        public Skill RawAttackSkill
        { 
            get { return base.AttackSkill as Skill; }
            set { base.AttackSkill = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Skill AttackSkill
        {
            get
            {
                return base.AttackSkill;
            }
            
            set
            {
                base.AttackSkill = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="MerchantStore" />.
        /// </summary>
        [JsonProperty("MerchantStore")]
        public ItemStorage RawMerchantStore
        { 
            get { return base.MerchantStore as ItemStorage; }
            set { base.MerchantStore = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Entities.ItemStorage MerchantStore
        {
            get
            {
                return base.MerchantStore;
            }
            
            set
            {
                base.MerchantStore = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MonsterDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea"/>.
    /// </summary>
    public partial class MonsterSpawnArea : MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea, IIdentifiable, IConvertibleTo<MonsterSpawnArea>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="MonsterDefinition" />.
        /// </summary>
        [JsonProperty("MonsterDefinition")]
        public MonsterDefinition RawMonsterDefinition
        { 
            get { return base.MonsterDefinition as MonsterDefinition; }
            set { base.MonsterDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.MonsterDefinition MonsterDefinition
        {
            get
            {
                return base.MonsterDefinition;
            }
            
            set
            {
                base.MonsterDefinition = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="GameMap" />.
        /// </summary>
        [JsonProperty("GameMap")]
        public GameMapDefinition RawGameMap
        { 
            get { return base.GameMap as GameMapDefinition; }
            set { base.GameMap = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.GameMapDefinition GameMap
        {
            get
            {
                return base.GameMap;
            }
            
            set
            {
                base.GameMap = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public MonsterSpawnArea Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Skill"/>.
    /// </summary>
    public partial class Skill : MUnique.OpenMU.DataModel.Configuration.Skill, IIdentifiable, IConvertibleTo<Skill>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Requirements" />.
        /// </summary>
        [JsonProperty("Requirements")]
        public ICollection<AttributeRequirement> RawRequirements { get; } = new List<AttributeRequirement>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> Requirements
        {
            get
            {
                return base.Requirements ?? (base.Requirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawRequirements)); 
            }
            protected set
            {
                this.Requirements.Clear();
                foreach (var item in value)
                {
                    this.Requirements.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ConsumeRequirements" />.
        /// </summary>
        [JsonProperty("ConsumeRequirements")]
        public ICollection<AttributeRequirement> RawConsumeRequirements { get; } = new List<AttributeRequirement>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> ConsumeRequirements
        {
            get
            {
                return base.ConsumeRequirements ?? (base.ConsumeRequirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawConsumeRequirements)); 
            }
            protected set
            {
                this.ConsumeRequirements.Clear();
                foreach (var item in value)
                {
                    this.ConsumeRequirements.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="QualifiedCharacters" />.
        /// </summary>
        [JsonProperty("QualifiedCharacters")]
        public ICollection<CharacterClass> RawQualifiedCharacters { get; } = new List<CharacterClass>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> QualifiedCharacters
        {
            get
            {
                return base.QualifiedCharacters ?? (base.QualifiedCharacters = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawQualifiedCharacters)); 
            }
            protected set
            {
                this.QualifiedCharacters.Clear();
                foreach (var item in value)
                {
                    this.QualifiedCharacters.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="ElementalModifierTarget" />.
        /// </summary>
        [JsonProperty("ElementalModifierTarget")]
        public AttributeDefinition RawElementalModifierTarget
        { 
            get { return base.ElementalModifierTarget as AttributeDefinition; }
            set { base.ElementalModifierTarget = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition ElementalModifierTarget
        {
            get
            {
                return base.ElementalModifierTarget;
            }
            
            set
            {
                base.ElementalModifierTarget = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="MagicEffectDef" />.
        /// </summary>
        [JsonProperty("MagicEffectDef")]
        public MagicEffectDefinition RawMagicEffectDef
        { 
            get { return base.MagicEffectDef as MagicEffectDefinition; }
            set { base.MagicEffectDef = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition MagicEffectDef
        {
            get
            {
                return base.MagicEffectDef;
            }
            
            set
            {
                base.MagicEffectDef = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="MasterDefinition" />.
        /// </summary>
        [JsonProperty("MasterDefinition")]
        public MasterSkillDefinition RawMasterDefinition
        { 
            get { return base.MasterDefinition as MasterSkillDefinition; }
            set { base.MasterDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.MasterSkillDefinition MasterDefinition
        {
            get
            {
                return base.MasterDefinition;
            }
            
            set
            {
                base.MasterDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Skill Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition"/>.
    /// </summary>
    public partial class StatAttributeDefinition : MUnique.OpenMU.DataModel.Configuration.StatAttributeDefinition, IIdentifiable, IConvertibleTo<StatAttributeDefinition>
    {
        /// <inheritdoc />
        public StatAttributeDefinition()
        {
        } 

        /// <inheritdoc />
        public StatAttributeDefinition(MUnique.OpenMU.AttributeSystem.AttributeDefinition attribute, System.Single baseValue, System.Boolean increasableByPlayer)
          : base (attribute, baseValue, increasableByPlayer)
        {
        }
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Attribute" />.
        /// </summary>
        [JsonProperty("Attribute")]
        public AttributeDefinition RawAttribute
        { 
            get { return base.Attribute as AttributeDefinition; }
            set { base.Attribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Attribute
        {
            get
            {
                return base.Attribute;
            }
            
            set
            {
                base.Attribute = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public StatAttributeDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.WarpInfo"/>.
    /// </summary>
    public partial class WarpInfo : MUnique.OpenMU.DataModel.Configuration.WarpInfo, IIdentifiable, IConvertibleTo<WarpInfo>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Gate" />.
        /// </summary>
        [JsonProperty("Gate")]
        public ExitGate RawGate
        { 
            get { return base.Gate as ExitGate; }
            set { base.Gate = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.ExitGate Gate
        {
            get
            {
                return base.Gate;
            }
            
            set
            {
                base.Gate = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public WarpInfo Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement"/>.
    /// </summary>
    public partial class AttributeRequirement : MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, IIdentifiable, IConvertibleTo<AttributeRequirement>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Attribute" />.
        /// </summary>
        [JsonProperty("Attribute")]
        public AttributeDefinition RawAttribute
        { 
            get { return base.Attribute as AttributeDefinition; }
            set { base.Attribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Attribute
        {
            get
            {
                return base.Attribute;
            }
            
            set
            {
                base.Attribute = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public AttributeRequirement Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption"/>.
    /// </summary>
    public partial class IncreasableItemOption : MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IIdentifiable, IConvertibleTo<IncreasableItemOption>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="LevelDependentOptions" />.
        /// </summary>
        [JsonProperty("LevelDependentOptions")]
        public ICollection<ItemOptionOfLevel> RawLevelDependentOptions { get; } = new List<ItemOptionOfLevel>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel> LevelDependentOptions
        {
            get
            {
                return base.LevelDependentOptions ?? (base.LevelDependentOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel, ItemOptionOfLevel>(this.RawLevelDependentOptions)); 
            }
            protected set
            {
                this.LevelDependentOptions.Clear();
                foreach (var item in value)
                {
                    this.LevelDependentOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="OptionType" />.
        /// </summary>
        [JsonProperty("OptionType")]
        public ItemOptionType RawOptionType
        { 
            get { return base.OptionType as ItemOptionType; }
            set { base.OptionType = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType OptionType
        {
            get
            {
                return base.OptionType;
            }
            
            set
            {
                base.OptionType = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="PowerUpDefinition" />.
        /// </summary>
        [JsonProperty("PowerUpDefinition")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public IncreasableItemOption Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition"/>.
    /// </summary>
    public partial class ItemBasePowerUpDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition, IIdentifiable, IConvertibleTo<ItemBasePowerUpDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="BonusPerLevel" />.
        /// </summary>
        [JsonProperty("BonusPerLevel")]
        public ICollection<LevelBonus> RawBonusPerLevel { get; } = new List<LevelBonus>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus> BonusPerLevel
        {
            get
            {
                return base.BonusPerLevel ?? (base.BonusPerLevel = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus, LevelBonus>(this.RawBonusPerLevel)); 
            }
            protected set
            {
                this.BonusPerLevel.Clear();
                foreach (var item in value)
                {
                    this.BonusPerLevel.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="TargetAttribute" />.
        /// </summary>
        [JsonProperty("TargetAttribute")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemBasePowerUpDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition"/>.
    /// </summary>
    public partial class ItemDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition, IIdentifiable, IConvertibleTo<ItemDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="QualifiedCharacters" />.
        /// </summary>
        [JsonProperty("QualifiedCharacters")]
        public ICollection<CharacterClass> RawQualifiedCharacters { get; } = new List<CharacterClass>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.CharacterClass> QualifiedCharacters
        {
            get
            {
                return base.QualifiedCharacters ?? (base.QualifiedCharacters = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.CharacterClass, CharacterClass>(this.RawQualifiedCharacters)); 
            }
            protected set
            {
                this.QualifiedCharacters.Clear();
                foreach (var item in value)
                {
                    this.QualifiedCharacters.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="PossibleItemSetGroups" />.
        /// </summary>
        [JsonProperty("PossibleItemSetGroups")]
        public ICollection<ItemSetGroup> RawPossibleItemSetGroups { get; } = new List<ItemSetGroup>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup> PossibleItemSetGroups
        {
            get
            {
                return base.PossibleItemSetGroups ?? (base.PossibleItemSetGroups = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, ItemSetGroup>(this.RawPossibleItemSetGroups)); 
            }
            protected set
            {
                this.PossibleItemSetGroups.Clear();
                foreach (var item in value)
                {
                    this.PossibleItemSetGroups.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="PossibleItemOptions" />.
        /// </summary>
        [JsonProperty("PossibleItemOptions")]
        public ICollection<ItemOptionDefinition> RawPossibleItemOptions { get; } = new List<ItemOptionDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition> PossibleItemOptions
        {
            get
            {
                return base.PossibleItemOptions ?? (base.PossibleItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, ItemOptionDefinition>(this.RawPossibleItemOptions)); 
            }
            protected set
            {
                this.PossibleItemOptions.Clear();
                foreach (var item in value)
                {
                    this.PossibleItemOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Requirements" />.
        /// </summary>
        [JsonProperty("Requirements")]
        public ICollection<AttributeRequirement> RawRequirements { get; } = new List<AttributeRequirement>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement> Requirements
        {
            get
            {
                return base.Requirements ?? (base.Requirements = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.AttributeRequirement, AttributeRequirement>(this.RawRequirements)); 
            }
            protected set
            {
                this.Requirements.Clear();
                foreach (var item in value)
                {
                    this.Requirements.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="BasePowerUpAttributes" />.
        /// </summary>
        [JsonProperty("BasePowerUpAttributes")]
        public ICollection<ItemBasePowerUpDefinition> RawBasePowerUpAttributes { get; } = new List<ItemBasePowerUpDefinition>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition> BasePowerUpAttributes
        {
            get
            {
                return base.BasePowerUpAttributes ?? (base.BasePowerUpAttributes = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemBasePowerUpDefinition, ItemBasePowerUpDefinition>(this.RawBasePowerUpAttributes)); 
            }
            protected set
            {
                this.BasePowerUpAttributes.Clear();
                foreach (var item in value)
                {
                    this.BasePowerUpAttributes.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="ItemSlot" />.
        /// </summary>
        [JsonProperty("ItemSlot")]
        public ItemSlotType RawItemSlot
        { 
            get { return base.ItemSlot as ItemSlotType; }
            set { base.ItemSlot = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType ItemSlot
        {
            get
            {
                return base.ItemSlot;
            }
            
            set
            {
                base.ItemSlot = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Skill" />.
        /// </summary>
        [JsonProperty("Skill")]
        public Skill RawSkill
        { 
            get { return base.Skill as Skill; }
            set { base.Skill = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Skill Skill
        {
            get
            {
                return base.Skill;
            }
            
            set
            {
                base.Skill = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet"/>.
    /// </summary>
    public partial class ItemOfItemSet : MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet, IIdentifiable, IConvertibleTo<ItemOfItemSet>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="ItemDefinition" />.
        /// </summary>
        [JsonProperty("ItemDefinition")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="BonusOption" />.
        /// </summary>
        [JsonProperty("BonusOption")]
        public IncreasableItemOption RawBonusOption
        { 
            get { return base.BonusOption as IncreasableItemOption; }
            set { base.BonusOption = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption BonusOption
        {
            get
            {
                return base.BonusOption;
            }
            
            set
            {
                base.BonusOption = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOfItemSet Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOption"/>.
    /// </summary>
    public partial class ItemOption : MUnique.OpenMU.DataModel.Configuration.Items.ItemOption, IIdentifiable, IConvertibleTo<ItemOption>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="OptionType" />.
        /// </summary>
        [JsonProperty("OptionType")]
        public ItemOptionType RawOptionType
        { 
            get { return base.OptionType as ItemOptionType; }
            set { base.OptionType = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType OptionType
        {
            get
            {
                return base.OptionType;
            }
            
            set
            {
                base.OptionType = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="PowerUpDefinition" />.
        /// </summary>
        [JsonProperty("PowerUpDefinition")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOption Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition"/>.
    /// </summary>
    public partial class ItemOptionDefinition : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionDefinition, IIdentifiable, IConvertibleTo<ItemOptionDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="PossibleOptions" />.
        /// </summary>
        [JsonProperty("PossibleOptions")]
        public ICollection<IncreasableItemOption> RawPossibleOptions { get; } = new List<IncreasableItemOption>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption> PossibleOptions
        {
            get
            {
                return base.PossibleOptions ?? (base.PossibleOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IncreasableItemOption>(this.RawPossibleOptions)); 
            }
            protected set
            {
                this.PossibleOptions.Clear();
                foreach (var item in value)
                {
                    this.PossibleOptions.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOptionDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel"/>.
    /// </summary>
    public partial class ItemOptionOfLevel : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionOfLevel, IIdentifiable, IConvertibleTo<ItemOptionOfLevel>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="PowerUpDefinition" />.
        /// </summary>
        [JsonProperty("PowerUpDefinition")]
        public PowerUpDefinition RawPowerUpDefinition
        { 
            get { return base.PowerUpDefinition as PowerUpDefinition; }
            set { base.PowerUpDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition PowerUpDefinition
        {
            get
            {
                return base.PowerUpDefinition;
            }
            
            set
            {
                base.PowerUpDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOptionOfLevel Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType"/>.
    /// </summary>
    public partial class ItemOptionType : MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, IIdentifiable, IConvertibleTo<ItemOptionType>
    {        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemOptionType Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup"/>.
    /// </summary>
    public partial class ItemSetGroup : MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup, IIdentifiable, IConvertibleTo<ItemSetGroup>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="Options" />.
        /// </summary>
        [JsonProperty("Options")]
        public ICollection<IncreasableItemOption> RawOptions { get; } = new List<IncreasableItemOption>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption> Options
        {
            get
            {
                return base.Options ?? (base.Options = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.IncreasableItemOption, IncreasableItemOption>(this.RawOptions)); 
            }
            protected set
            {
                this.Options.Clear();
                foreach (var item in value)
                {
                    this.Options.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="Items" />.
        /// </summary>
        [JsonProperty("Items")]
        public ICollection<ItemOfItemSet> RawItems { get; } = new List<ItemOfItemSet>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet> Items
        {
            get
            {
                return base.Items ?? (base.Items = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOfItemSet, ItemOfItemSet>(this.RawItems)); 
            }
            protected set
            {
                this.Items.Clear();
                foreach (var item in value)
                {
                    this.Items.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemSetGroup Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType"/>.
    /// </summary>
    public partial class ItemSlotType : MUnique.OpenMU.DataModel.Configuration.Items.ItemSlotType, IIdentifiable, IConvertibleTo<ItemSlotType>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemSlotType Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus"/>.
    /// </summary>
    public partial class LevelBonus : MUnique.OpenMU.DataModel.Configuration.Items.LevelBonus, IIdentifiable, IConvertibleTo<LevelBonus>
    {
        /// <inheritdoc />
        public LevelBonus()
        {
        } 

        /// <inheritdoc />
        public LevelBonus(System.Int32 level, System.Single constantValue)
          : base (level, constantValue)
        {
        }
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public LevelBonus Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting"/>.
    /// </summary>
    public partial class ItemCrafting : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCrafting, IIdentifiable, IConvertibleTo<ItemCrafting>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="SimpleCraftingSettings" />.
        /// </summary>
        [JsonProperty("SimpleCraftingSettings")]
        public SimpleCraftingSettings RawSimpleCraftingSettings
        { 
            get { return base.SimpleCraftingSettings as SimpleCraftingSettings; }
            set { base.SimpleCraftingSettings = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings SimpleCraftingSettings
        {
            get
            {
                return base.SimpleCraftingSettings;
            }
            
            set
            {
                base.SimpleCraftingSettings = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemCrafting Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem"/>.
    /// </summary>
    public partial class ItemCraftingRequiredItem : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem, IIdentifiable, IConvertibleTo<ItemCraftingRequiredItem>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="RequiredItemOptions" />.
        /// </summary>
        [JsonProperty("RequiredItemOptions")]
        public ICollection<ItemOptionType> RawRequiredItemOptions { get; } = new List<ItemOptionType>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType> RequiredItemOptions
        {
            get
            {
                return base.RequiredItemOptions ?? (base.RequiredItemOptions = new CollectionAdapter<MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionType, ItemOptionType>(this.RawRequiredItemOptions)); 
            }
            protected set
            {
                this.RequiredItemOptions.Clear();
                foreach (var item in value)
                {
                    this.RequiredItemOptions.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="ItemDefinition" />.
        /// </summary>
        [JsonProperty("ItemDefinition")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemCraftingRequiredItem Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem"/>.
    /// </summary>
    public partial class ItemCraftingResultItem : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem, IIdentifiable, IConvertibleTo<ItemCraftingResultItem>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="ItemDefinition" />.
        /// </summary>
        [JsonProperty("ItemDefinition")]
        public ItemDefinition RawItemDefinition
        { 
            get { return base.ItemDefinition as ItemDefinition; }
            set { base.ItemDefinition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition ItemDefinition
        {
            get
            {
                return base.ItemDefinition;
            }
            
            set
            {
                base.ItemDefinition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ItemCraftingResultItem Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings"/>.
    /// </summary>
    public partial class SimpleCraftingSettings : MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings, IIdentifiable, IConvertibleTo<SimpleCraftingSettings>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="RequiredItems" />.
        /// </summary>
        [JsonProperty("RequiredItems")]
        public IList<ItemCraftingRequiredItem> RawRequiredItems { get; } = new List<ItemCraftingRequiredItem>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override IList<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem> RequiredItems
        {
            get
            {
                return base.RequiredItems ?? (base.RequiredItems = new ListAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem, ItemCraftingRequiredItem>(this.RawRequiredItems)); 
            }
            protected set
            {
                this.RequiredItems.Clear();
                foreach (var item in value)
                {
                    this.RequiredItems.Add(item);
                }
            }
        }

        /// <summary>
        /// Gets the raw collection of <see cref="ResultItems" />.
        /// </summary>
        [JsonProperty("ResultItems")]
        public IList<ItemCraftingResultItem> RawResultItems { get; } = new List<ItemCraftingResultItem>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override IList<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem> ResultItems
        {
            get
            {
                return base.ResultItems ?? (base.ResultItems = new ListAdapter<MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingResultItem, ItemCraftingResultItem>(this.RawResultItems)); 
            }
            protected set
            {
                this.ResultItems.Clear();
                foreach (var item in value)
                {
                    this.ResultItems.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public SimpleCraftingSettings Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition"/>.
    /// </summary>
    public partial class PowerUpDefinition : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition, IIdentifiable, IConvertibleTo<PowerUpDefinition>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="TargetAttribute" />.
        /// </summary>
        [JsonProperty("TargetAttribute")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Boost" />.
        /// </summary>
        [JsonProperty("Boost")]
        public PowerUpDefinitionValue RawBoost
        { 
            get { return base.Boost as PowerUpDefinitionValue; }
            set { base.Boost = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Boost
        {
            get
            {
                return base.Boost;
            }
            
            set
            {
                base.Boost = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public PowerUpDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue"/>.
    /// </summary>
    public partial class PowerUpDefinitionValue : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue, IIdentifiable, IConvertibleTo<PowerUpDefinitionValue>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw collection of <see cref="RelatedValues" />.
        /// </summary>
        [JsonProperty("RelatedValues")]
        public ICollection<AttributeRelationship> RawRelatedValues { get; } = new List<AttributeRelationship>();
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override ICollection<MUnique.OpenMU.AttributeSystem.AttributeRelationship> RelatedValues
        {
            get
            {
                return base.RelatedValues ?? (base.RelatedValues = new CollectionAdapter<MUnique.OpenMU.AttributeSystem.AttributeRelationship, AttributeRelationship>(this.RawRelatedValues)); 
            }
            protected set
            {
                this.RelatedValues.Clear();
                foreach (var item in value)
                {
                    this.RelatedValues.Add(item);
                }
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public PowerUpDefinitionValue Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration"/>.
    /// </summary>
    public partial class PowerUpDefinitionWithDuration : MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionWithDuration, IIdentifiable, IConvertibleTo<PowerUpDefinitionWithDuration>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Duration" />.
        /// </summary>
        [JsonProperty("Duration")]
        public PowerUpDefinitionValue RawDuration
        { 
            get { return base.Duration as PowerUpDefinitionValue; }
            set { base.Duration = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Duration
        {
            get
            {
                return base.Duration;
            }
            
            set
            {
                base.Duration = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="TargetAttribute" />.
        /// </summary>
        [JsonProperty("TargetAttribute")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="Boost" />.
        /// </summary>
        [JsonProperty("Boost")]
        public PowerUpDefinitionValue RawBoost
        { 
            get { return base.Boost as PowerUpDefinitionValue; }
            set { base.Boost = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.DataModel.Attributes.PowerUpDefinitionValue Boost
        {
            get
            {
                return base.Boost;
            }
            
            set
            {
                base.Boost = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public PowerUpDefinitionWithDuration Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.AttributeSystem.AttributeDefinition"/>.
    /// </summary>
    public partial class AttributeDefinition : MUnique.OpenMU.AttributeSystem.AttributeDefinition, IIdentifiable, IConvertibleTo<AttributeDefinition>
    {
        /// <inheritdoc />
        public AttributeDefinition()
        {
        } 

        /// <inheritdoc />
        public AttributeDefinition(System.Guid id, System.String designation, System.String description)
          : base (id, designation, description)
        {
        }        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public AttributeDefinition Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.AttributeSystem.StatAttribute"/>.
    /// </summary>
    public partial class StatAttribute : MUnique.OpenMU.AttributeSystem.StatAttribute, IIdentifiable, IConvertibleTo<StatAttribute>
    {
        /// <inheritdoc />
        public StatAttribute()
        {
        } 

        /// <inheritdoc />
        public StatAttribute(MUnique.OpenMU.AttributeSystem.AttributeDefinition definition, System.Single baseValue)
          : base (definition, baseValue)
        {
        }
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Definition" />.
        /// </summary>
        [JsonProperty("Definition")]
        public AttributeDefinition RawDefinition
        { 
            get { return base.Definition as AttributeDefinition; }
            set { base.Definition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            protected set
            {
                base.Definition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public StatAttribute Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.AttributeSystem.ConstValueAttribute"/>.
    /// </summary>
    public partial class ConstValueAttribute : MUnique.OpenMU.AttributeSystem.ConstValueAttribute, IIdentifiable, IConvertibleTo<ConstValueAttribute>
    {

        /// <inheritdoc />
        public ConstValueAttribute(System.Single value, MUnique.OpenMU.AttributeSystem.AttributeDefinition definition)
          : base (value, definition)
        {
        }
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="Definition" />.
        /// </summary>
        [JsonProperty("Definition")]
        public AttributeDefinition RawDefinition
        { 
            get { return base.Definition as AttributeDefinition; }
            set { base.Definition = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition Definition
        {
            get
            {
                return base.Definition;
            }
            
            protected set
            {
                base.Definition = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public ConstValueAttribute Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.AttributeSystem.AttributeRelationship"/>.
    /// </summary>
    public partial class AttributeRelationship : MUnique.OpenMU.AttributeSystem.AttributeRelationship, IIdentifiable, IConvertibleTo<AttributeRelationship>
    {
        /// <inheritdoc />
        public AttributeRelationship()
        {
        } 

        /// <inheritdoc />
        public AttributeRelationship(MUnique.OpenMU.AttributeSystem.AttributeDefinition targetAttribute, System.Single inputOperand, MUnique.OpenMU.AttributeSystem.AttributeDefinition inputAttribute)
          : base (targetAttribute, inputOperand, inputAttribute)
        {
        }

        /// <inheritdoc />
        public AttributeRelationship(MUnique.OpenMU.AttributeSystem.AttributeDefinition targetAttribute, System.Single inputOperand, MUnique.OpenMU.AttributeSystem.AttributeDefinition inputAttribute, MUnique.OpenMU.AttributeSystem.InputOperator inputOperator)
          : base (targetAttribute, inputOperand, inputAttribute, inputOperator)
        {
        }
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        /// Gets the raw object of <see cref="TargetAttribute" />.
        /// </summary>
        [JsonProperty("TargetAttribute")]
        public AttributeDefinition RawTargetAttribute
        { 
            get { return base.TargetAttribute as AttributeDefinition; }
            set { base.TargetAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition TargetAttribute
        {
            get
            {
                return base.TargetAttribute;
            }
            
            set
            {
                base.TargetAttribute = value;
            }
        }

        /// <summary>
        /// Gets the raw object of <see cref="InputAttribute" />.
        /// </summary>
        [JsonProperty("InputAttribute")]
        public AttributeDefinition RawInputAttribute
        { 
            get { return base.InputAttribute as AttributeDefinition; }
            set { base.InputAttribute = value; } 
        }
        
        /// <inheritdoc/>
        [JsonIgnore]
        public override MUnique.OpenMU.AttributeSystem.AttributeDefinition InputAttribute
        {
            get
            {
                return base.InputAttribute;
            }
            
            set
            {
                base.InputAttribute = value;
            }
        }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public AttributeRelationship Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.Interfaces.LetterHeader"/>.
    /// </summary>
    public partial class LetterHeader : MUnique.OpenMU.Interfaces.LetterHeader, IIdentifiable, IConvertibleTo<LetterHeader>
    {        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public LetterHeader Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.Interfaces.Friend"/>.
    /// </summary>
    public partial class Friend : MUnique.OpenMU.Interfaces.Friend, IIdentifiable, IConvertibleTo<Friend>
    {        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public Friend Convert() => this;
    }

    /// <summary>
    /// A plain implementation of <see cref="MUnique.OpenMU.PlugIns.PlugInConfiguration"/>.
    /// </summary>
    public partial class PlugInConfiguration : MUnique.OpenMU.PlugIns.PlugInConfiguration, IIdentifiable, IConvertibleTo<PlugInConfiguration>
    {
        /// <summary>
        /// Gets or sets the identifier of this instance.
        /// </summary>
        public Guid Id { get; set; }
        
        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            var baseObject = obj as IIdentifiable;
            if (baseObject != null)
            {
                return baseObject.Id == this.Id;
            }

            return base.Equals(obj);
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <inheritdoc/>
        public PlugInConfiguration Convert() => this;
    }

    
}