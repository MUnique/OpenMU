@using System.Diagnostics.CodeAnalysis
@inherits NotifyableInputBase<byte>

<div>
    <FieldLabel Text="@Label" ValueExpression="@this.ValueExpression" />
    <InputByte id="@this.FieldIdentifier.FieldName" @bind-Value="@CurrentValue" Min="@Min" Max="@(Max ?? byte.MaxValue)"/>
    <ValidationMessage For=@this.ValueExpression />
</div>

@code {

    /// <summary>
    /// Gets or sets the label.
    /// </summary>
    [Parameter]
    public string? Label { get; set; }

    /// <summary>
    /// Gets or sets the minimum value.
    /// </summary>
    [Parameter]
    public byte Min { get; set; } = byte.MinValue;

    /// <summary>
    /// Gets or sets the maximum value.
    /// </summary>
    [Parameter]
    public byte? Max { get; set; }

    /// <inheritdoc />
    protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out byte result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}