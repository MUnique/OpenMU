@using MUnique.OpenMU.Persistence
@using MUnique.OpenMU.DataModel.Entities
@using MUnique.OpenMU.Web.AdminPanel.Components.ItemEdit

@typeparam TItem


@if (typeof(TItem) == typeof(Item))
{
    var item = (Item)(object)this.Item!;

    <CascadingValue Value="@this.PersistenceContext">
        <ItemEdit Item="@item" OnCancel="@this.CancelAsync" OnValidSubmit="@this.SubmitAsync" />
    </CascadingValue>
}
else
{
    <EditForm Model="@Item">
        <CascadingValue Value="@this.PersistenceContext">
            <DataAnnotationsValidator/>
            <CreationAutoFields/>
            <ValidationSummary/>
        </CascadingValue>
        <button type="submit" @onclick="@SubmitAsync" class="primary-button">Submit</button>
        <button type="button" @onclick="@CancelAsync" class="cancel-button">Cancel</button>
    </EditForm>
}

@code {

    /// <summary>
    /// Gets or sets the modal instance.
    /// </summary>
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = null!;

    /// <summary>
    /// Gets or sets the item which should be created.
    /// </summary>
    [Parameter]
    public TItem Item { get; set; } = default!;

    /// <summary>
    /// Gets or sets the persistence context which should be used. It's required for lookups.
    /// </summary>
    [Parameter]
    public IContext PersistenceContext { get; set; } = null!;

    private Task SubmitAsync()
    {
        return this.BlazoredModal.CloseAsync(ModalResult.Ok(Item));
    }

    private Task CancelAsync()
    {
        return this.BlazoredModal.CancelAsync();
    }
}
