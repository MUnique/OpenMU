@page "/merchants"

@using Microsoft.AspNetCore.Components.QuickGrid;
@using MUnique.OpenMU.DataModel.Entities
@using MUnique.OpenMU.Persistence

<h1>Merchants</h1>


@if (this.ViewModels is null)
{
    <span class="spinner-border" role="status" aria-hidden="true"></span>
    <span class="sr-only">Loading...</span>
    return;
}

@if (this._selectedMerchant is null)
{
    <div>
        <QuickGrid Items="@this.ViewModels" Pagination="@_merchantPagination" Theme="none">
            <PropertyColumn Title="Name" Property="@(c => c.Name)" Sortable="true">
            </PropertyColumn>

            <TemplateColumn Align="Align.Center">
                <button type="button" class="btn-info" @onclick="@(() => this.OnMerchantEditClickAsync(context))">Edit</button>
            </TemplateColumn>
        </QuickGrid>
    </div>
    <Paginator Value="@_merchantPagination"/>
}
else
{
    <h2>@this._selectedMerchant.Merchant.Designation</h2>
    <div>
        <QuickGrid TGridItem="Item" Items="@(this._selectedMerchant.Items.OrderBy(item => item.ItemSlot).AsQueryable())" Pagination="@_itemPagination" Theme="none">
            <PropertyColumn Align="Align.Left" Title="Slot" Property="@(c => c!.ItemSlot)" Sortable="true" />
            <PropertyColumn Align="Align.Left" Title="Item" Property="@(c => c!.ToString())" Sortable="true" />
            <TemplateColumn Align="Align.Center">
                <button type="button" class="btn-info" @onclick="@(() => this.OnEditItemClickAsync(context!))">Edit</button>
            </TemplateColumn>
            <TemplateColumn Align="Align.Center">
                <button type="button" class="btn-warning" @onclick="@(() => this.OnRemoveItemClickAsync(context!))">Remove</button>
            </TemplateColumn>
        </QuickGrid>
        <Paginator Value="@_itemPagination" />
    </div>
    
    <div>
        <button type="button" class="btn-info" @onclick="@this.OnCreateItemClickAsync">Create Item</button>
    </div>
}
